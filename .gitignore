# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
**/bin/
.DS_Store
# Common VCS dirs
.git/
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*~
# Various IDEs
.project
**.idea
.classpath
.settings
*.tmproj
**/.gradle/*
# Ignore folder named 'build'
**/*build*/
**/crypto-config*/*
**/go/*
**/*tmp*/
**/flux_known_hosts
**/fulcrum.iml
**/token
**/target/*
**/*.log
# Ignore node_modules
**/node_modules
**/*.srl
**/.vscode/
# custom config templates
*_custom.tpl


### Terraform ###
# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version
# control as they are data points which are potentially sensitive and subject
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

environments/test/cluster-keys.json
