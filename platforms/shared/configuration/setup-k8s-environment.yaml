##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

---
#######################################
# Playbook to setup the Kubernetes environment for running Hyperledger Bevel on the cluster
#  - Installs Flux for GitOps
#  - Installs Ambassador (if chosen)
#  - Install HAproxy-ingress (if chosen)
#######################################
- hosts: ansible_provisioners
  gather_facts: no
  no_log: "{{ no_ansible_log | default(false) }}"
  tasks:
  - include_role:
      name:  setup/flux
    vars:
      kubeconfig_path: "{{ item.k8s.config_file }}"
      kubecontext: "{{ item.k8s.context }}"
      git_username: "{{ item.gitops.username }}"
      git_repo: "{{ item.gitops.git_repo }}"
      git_password: "{{ item.gitops.password }}"
      git_branch: "{{ item.gitops.branch }}"
      git_path: "{{ item.gitops.release_dir }}"
      git_host: "{{ item.gitops.git_repo.split('/')[0] | lower }}" # extract the hostname from the git_repo
      git_protocol: "{{ item.gitops.git_protocol | default('https') }}"
      git_url: "{{ item.gitops.git_url }}"
      git_key: "{{ item.gitops.private_key | default() }}"
      flux_version: "0.35.0"
    with_items: "{{ network.organizations }}"
  - name: Prepare nodes and clients ports for ambassador
    vars:
      name: "{{ organizationItem.name }}"
    set_fact:
      stewards: "{{ stewards | default([]) + organizationItem.services.stewards | list }}"
    loop: "{{ network.organizations }}"
    loop_control:
      loop_var: organizationItem
    when: organizationItem.services.stewards is defined and network['type'] == 'indy'
  - include_role:
      name: setup/ambassador
    vars:
      kubeconfig_path: "{{ item.k8s.config_file }}"
      kubecontext: "{{ item.k8s.context }}"
      aws: "{{ item.aws }}"
      organization: "{{ item }}"
    with_items: "{{ network.organizations }}"
    when: network.env.proxy == 'ambassador'
  # Installs cert-manager
  - include_role:
      name: setup/certmanager
    vars:
      kubeconfig_path: "{{ item.k8s.config_file }}"
      kubecontext: "{{ item.k8s.context }}"
      aws: "{{ item.aws }}"
      organization: "{{ item }}"
    with_items: "{{ network.organizations }}"
    when: 
      - network.env.proxy == 'ambassador'
      - network.type == 'besu'
  - include_role:
      name: setup/haproxy-ingress
    vars:
      kubeconfig_path: "{{ item.k8s.config_file }}"
      kubecontext: "{{ item.k8s.context }}"
      aws: "{{ item.aws }}"
    with_items: "{{ network.organizations }}"
    when: network.env.proxy == 'haproxy'
  vars: #These variables can be overriden from the command line
    privilege_escalate: false           #Default to NOT escalate to root privledges
    install_os: "linux"                 #Default to linux OS
    install_arch:  "amd64"              #Default to amd64 architecture
    bin_install_dir:  "~/bin"           #Default to ~/bin install directory for binaries
