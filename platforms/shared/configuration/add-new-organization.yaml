##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

---
#######################################
# Main Playbook for the setting up and reseting Hyperledger Bevel DLT network
#######################################
  - hosts: all
    gather_facts: no
    no_log: "{{ no_ansible_log | default(false) }}"
  - import_playbook: setup-environment.yaml   # First setup environment for each organization
  - import_playbook: setup-k8s-environment.yaml # Then deploy Flux for each organization
    when: reset is undefined or reset == 'false'
  - import_playbook: "{{ playbook_dir }}/../../hyperledger-fabric/configuration/add-organization.yaml"
    vars:
      add_new_org: 'true'
    when: network.type == 'fabric' and (reset is undefined or reset == 'false')
  - import_playbook: "{{ playbook_dir }}/../../hyperledger-fabric/configuration/chaincode-ops.yaml"
    vars:
      add_new_org: 'true'
    when: network.type == 'fabric' and (reset is undefined or reset == 'false')
  - import_playbook: "{{ playbook_dir }}/../../r3-corda/configuration/deploy-network.yaml"
    when: network.type == 'corda' and (reset is undefined or reset == 'false')
  - import_playbook: "{{ playbook_dir }}/../../r3-corda-ent/configuration/deploy-network.yaml"
    when: network.type == 'corda-enterprise' and (reset is undefined or reset == 'false')
  - import_playbook: "{{ playbook_dir }}/../../hyperledger-indy/configuration/deploy-network.yaml"
    vars:
      add_new_org: true
    when: network.type == 'indy' and (reset is undefined or reset == 'false')
  - import_playbook: "{{ playbook_dir }}/../../quorum/configuration/deploy-network.yaml"
    vars:
      add_new_org: true
    when: network.type == 'quorum' and (reset is undefined or reset == 'false')
  - import_playbook: "{{ playbook_dir }}/../../hyperledger-besu/configuration/deploy-network.yaml"
    vars:
      add_new_org: true
    when: network.type == 'besu' and (reset is undefined or reset == 'false')
