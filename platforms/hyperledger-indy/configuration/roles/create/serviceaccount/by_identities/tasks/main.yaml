##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

#############################################################################################
# This role creates value files for service account
#############################################################################################

# Check service account exists already
- name: Check if service account for {{ component_name }} exists
  include_role: 
    name: "{{ playbook_dir }}/../../shared/configuration/roles/check/k8_component"
  vars:
    component_type: "ServiceAccount"
    type: "no_retry"

# Sets the result of service account check to a local variable
- name: "Set Variable"
  set_fact:
    serviceaccount_state: "{{ serviceAccount_data }}"

# Create service account
- name: Create service account for {{ component_name }}
  include_role:
    name: create/k8_component
  vars:
    component_type: "service-account"
    component_type_name: "{{ component_name }}"
  when: serviceaccount_state.resources|length == 0

# Check cluster role binding
- name: Check cluster role binding for {{ component_name }}
  include_role: 
    name: "{{ playbook_dir }}/../../shared/configuration/roles/check/k8_component"
  vars:  
    namespace: "{{ component_namespace }}"
    component_type: "ClusterRoleBinding"
    type: "no_retry"

# Sets the result of cluster role binding check result to a local variable
- name: "Set Variable"
  set_fact:
    clusterrolebinding_state: "{{ result }}"

# Get component_name to var
- name: Get component_name to var
  shell: echo {{ component_name }}
  register: component_name_var
  when: clusterrolebinding_state.resources|length == 0

# Get organization and admin string to var
- name: Get organization and admin string to var
  shell: echo {{ organization }}-admin-vault-auth
  register: organization_admin_var
  when: clusterrolebinding_state.resources|length == 0

# Create cluster role binding
- name: Create cluster role binding for {{ component_name }}
  include_role:
    name: create/k8_component
  vars:
    component_type: "cluster-role-binding"
    component_type_name: "{{ component_name }}"
  when: clusterrolebinding_state.resources|length == 0

# Create cluster role binding
- name: Create admin cluster role binding for {{ component_name }}
  include_role:
    name: create/k8_component
  vars:
    component_type: "admin-cluster-role-binding"
    component_type_name: "{{ component_name }}"
  when: clusterrolebinding_state.resources|length == 0 and organization_admin_var.stdout == component_name_var.stdout
