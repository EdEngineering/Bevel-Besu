##############################################################################################
#  Copyright Walmart Inc. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

- hosts: ansible_provisioners
  gather_facts: no
  no_log: "{{ no_ansible_log | default(false) }}"
  tasks:
  # delete build directory
  - name: Remove build directory
    file:
      path: "./build"
      state: absent

  # Create namespaces and service accounts
  - name: "Create namespace and service account"
    include_role:
      name: create/namespace
    vars:
      component_ns: "{{ organizationItem.name | lower }}-bes"
      organisation: "{{ organizationItem.name | lower }}"
      kubernetes: "{{ organizationItem.k8s }}"
      gitops: "{{ organizationItem.gitops }}"
    loop: "{{ network['organizations'] }}"
    loop_control:
      loop_var: organizationItem

  # Create Storageclass
  - name: Create Storage Class
    include_role:
      name: create/storageclass
    vars:
      storageclass_name: "{{ organizationItem.cloud_provider }}storageclass"
      git_dir: "{{ organizationItem.gitops.release_dir }}"
      org: "{{ organizationItem }}"
      kubernetes: "{{ organizationItem.k8s }}"
    loop: "{{ network['organizations'] }}"
    loop_control:
      loop_var: organizationItem

  # Setup Vault-Kubernetes accesses and Regcred for docker registry
  - name: "Setup vault"
    include_role:
      name: "{{ playbook_dir }}/../../shared/configuration/roles/setup/vault_kubernetes"
    vars:
      policy_type: "besu"
      name: "{{ organizationItem.name | lower }}"
      component_ns: "{{ organizationItem.name | lower }}-bes"
      component_name: "{{ organizationItem.name | lower }}-vaultk8s-job"
      component_auth: "besu{{ organizationItem.name | lower }}"
      component_type: "organization"
      kubernetes: "{{ organizationItem.k8s }}"
      vault: "{{ organizationItem.vault }}"
      gitops: "{{ organizationItem.gitops }}"
      reset_path: "platforms/hyperledger-besu/configuration"
    loop: "{{ network['organizations'] }}"
    loop_control:
      loop_var: organizationItem

  # Generate Ambassador certificate for nodes. These certificates are used for Orion TLS as well
  - name: "Create ambassador certificates for Nodes"
    include_role:
      name: create/certificates/ambassador
    vars:
      root_subject: "{{ network.config.subject }}"
      cert_subject: "{{ network.config.subject | regex_replace(',', '/') }}"
      services: "{{ organizationItem.services }}"
      organisation: "{{ organizationItem.name | lower }}"
      component_ns: "{{ organizationItem.name | lower }}-bes"
      component_name: "{{ organizationItem.name | lower }}"
      kubernetes: "{{ organizationItem.k8s }}"
      vault: "{{ organizationItem.vault }}"
      charts_dir: "{{ organizationItem.gitops.chart_source }}"
      gitops: "{{ organizationItem.gitops }}"
      values_dir: "{{ playbook_dir }}/../../../{{organizationItem.gitops.release_dir}}/{{ organizationItem.name | lower }}"
    loop: "{{ network['organizations']}}"
    loop_control:
      loop_var: organizationItem

  # This role generates key pair and nodeaddress for all orgs of the network
  - name: "Generate crypto for the network nodes"
    include_role:
      name: create/crypto/node
    vars:
      build_path: "{{ playbook_dir }}/build"
      organisation: "{{ organizationItem.name | lower }}"
      organisation_ns: "{{ organizationItem.name | lower }}-bes"
      kubernetes: "{{ organizationItem.k8s }}"
      vault: "{{ organizationItem.vault }}"
      charts_dir: "{{ organizationItem.gitops.chart_source }}"
      gitops: "{{ organizationItem.gitops }}"
      values_dir: "{{ playbook_dir }}/../../../{{organizationItem.gitops.release_dir}}/{{ organizationItem.name | lower }}"
    loop: "{{ network['organizations']}}"
    loop_control:
      loop_var: organizationItem

  # This role generates the crypto materials for orion tm
  - name: "Generate crypto for the Orion transaction manager"
    include_role:
      name: create/crypto/orion
    vars:
      build_path: "{{ playbook_dir }}/build"
      component_ns: "{{ org.name }}-bes"
      kubernetes: "{{ org.k8s }}"
      vault: "{{ org.vault }}"
      gitops: "{{ org.gitops }}"
      charts_dir: "{{ org.gitops.chart_source }}"
      values_dir: "{{ playbook_dir }}/../../../{{ org.gitops.release_dir }}"
    loop: "{{ network['organizations'] }}"
    loop_control:
      loop_var: org
    when:
      - org.type == 'member'
      - network.config.transaction_manager == 'orion'

  # This role generates the crypto materials for tessera tm
  - name: "Generate crypto for the Tessera transaction manager"
    include_role:
      name: create/crypto/tessera
    vars:
      build_path: "{{ playbook_dir }}/build"
      component_ns: "{{ org.name }}-bes"
      kubernetes: "{{ org.k8s }}"
      vault: "{{ org.vault }}"
      gitops: "{{ org.gitops }}"
      charts_dir: "{{ org.gitops.chart_source }}"
      values_dir: "{{ playbook_dir }}/../../../{{ org.gitops.release_dir }}"
    loop: "{{ network['organizations'] }}"
    loop_control:
      loop_var: org
    when:
      - org.type == 'member'
      - network.config.transaction_manager == 'tessera'

  - name: Generate admin key for permissioning
    include_role:
      name: create/crypto/key_generation
    vars:
      build_path: "{{ playbook_dir }}/build"
      component_ns: "{{ org.name | lower }}-bes"
      vault: "{{ org.vault }}"
      user: "admin"
    loop: "{{ network['organizations'] }}"
    loop_control:
        loop_var: org
    when: network.permissioning.enabled is defined and network.permissioning.enabled == true

  vars: #These variables can be overriden from the command line
    install_os: "linux"                 #Default to linux OS
    install_arch:  "amd64"              #Default to amd64 architecture
    bin_install_dir:  "~/bin"            #Default to /bin install directory for binaries
    add_new_org: false
