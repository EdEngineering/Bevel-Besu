##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

#############################################################################################
# This role creates value files for storage class
#############################################################################################
# Check storageclass exists already
- name: "Checking if the storage class {{ storageclass_name }} already exists"
  include_role:
    name: "{{ playbook_dir }}/../../shared/configuration/roles/check/k8_component"
  vars:
    component_type: "StorageClass"
    component_name: "{{ storageclass_name }}"
    type: "no_retry"

#set variable storageclass_state
- name: "Set Variable"
  set_fact:
    storageclass_state: "{{ result }}"

- name: Create storageclass
  include_role:
    name: create/k8_component
  vars:
    component_type: "{{ org.cloud_provider}}-storageclass"
    component_name: "{{ storageclass_name }}"
    helm_lint: "false"
    release_dir: "{{ playbook_dir }}/../../../{{ org.gitops.release_dir }}"
  when: storageclass_state.resources|length == 0

# Push the deployment files to repository
- name: "Push the created deployment files to repository"
  include_role: 
    name: "{{ playbook_dir }}/../../shared/configuration/roles/git_push"
  vars:
    GIT_DIR: "{{ playbook_dir }}/../../../"
    gitops: "{{ org.gitops }}"
    GIT_RESET_PATH: "platforms/hyperledger-besu/configuration"
    msg: "[ci skip] Pushing deployment file for storageclass"
  when: storageclass_state.resources|length == 0

#Wait for the creation of storage class
- name: "Waiting for the creation of {{ storageclass_name }} storage class for {{ component_name }}"
  include_role:
    name: "{{ playbook_dir }}/../../shared/configuration/roles/check/k8_component"
  vars:
    component_type: "StorageClass"
    component_name: "{{ storageclass_name }}"
    type: "retry"
  when: storageclass_state.resources|length == 0
