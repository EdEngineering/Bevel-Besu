##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

# This tasks checks the crypto material in the vault
- name: Check for the crypto material in the vault
  include_tasks: check_vault.yaml
  vars:    
    vault: "{{ org.vault }}"
    peers: "{{ org.services.peers }}"

- name: "Wait for namespace creation for members"
  include_role:
    name: "{{ playbook_dir }}/../../shared/configuration/roles/check/k8_component"
  vars:
    component_type: "Namespace"
    component_name: "{{ component_ns }}"    
    type: "retry"
  when: 
  - generate_crypto_orion is defined 
  - generate_crypto_orion

# ---------------------------------------------------------------------
# generate Orion crypto helmrelease file
- name: "Create orion crypto file"
  include_role:
    name: create/helm_component
  vars:    
    component_type: "crypto"    
    type: "crypto_orion"    
    name: "{{ org.name | lower }}"
    component_name: "{{ peer.name }}-orion-job"    
  loop: "{{ org.services.peers }}"
  loop_control:
    loop_var: peer
  when: 
  - generate_crypto_orion is defined 
  - generate_crypto_orion

# ---------------------------------------------------------------------
# push the created deployment files to repository
- name: "Push the created deployment files to repository"
  include_role:
    name: "{{ playbook_dir }}/../../shared/configuration/roles/git_push"
  vars:
    GIT_DIR: "{{ playbook_dir }}/../../../"
    GIT_RESET_PATH: "platforms/hyperledger-besu/configuration"
    msg: "[ci skip] Pushing orion job files for {{ component_ns }}"
  when: 
  - generate_crypto_orion is defined 
  - generate_crypto_orion

# Check if orion crypto job is completed
- name: Check if orion crypto job is completed
  include_role:
    name: "{{ playbook_dir }}/../../shared/configuration/roles/check/helm_component"
  vars:
    component_name: "{{ peer.name }}-orion-job"
    component_type: Job
    namespace: "{{ component_ns }}"
  loop: "{{ org.services.peers }}"
  loop_control:
    loop_var: peer
  when: 
  - generate_crypto_orion is defined 
  - generate_crypto_orion
