##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

# Set enode_data_list to empty.
- name: Set enode_data_list to empty
  set_fact:
    enode_data_list: []

# Set node status
- name: Set node status
  set_fact:
    node_status: default
  when: not add_new_org

# Set node status
- name: Set node status
  set_fact:
    node_status: additional
  when: add_new_org

# Get enode data for all orgs
- name: Get enode data for each node of all organization
  include_tasks: enode_data.yaml
  loop: "{{ network['organizations'] }}"
  loop_control:
    loop_var: org1

# This task creates the staticnodes file from the template
- name: Create staticnodes file
  template:
    src: "staticnodes.tpl"
    dest: "{{ network.config.staticnodes }}"
  when: not add_new_org

# This task adds a new node to the existing network
- name: Adds a new node to the existing network
  uri:
    url: "http://{{ geth_data.url }}:{{ geth_data.rpcport }}"
    method: POST
    validate_certs: no
    return_content: yes
    body_format: json
    body: '{"jsonrpc":"2.0","method":"raft_addPeer","params": ["enode://{{ enode.enodeval }}@{{ enode.peer_name }}.{{ enode.external_url }}:{{ enode.p2p_ambassador }}?discport=0&raftport={{ enode.raft_ambassador }}"], "id":{{ geth_data.nodeid }} }'
    headers:
      Content-Type: "application/json"
  loop: "{{ enode_data_list }}"
  loop_control:
    loop_var: enode
  register: peer_id
  until: peer_id.status == 200
  retries: "{{ network.env.retry_count }}"
  delay: 50
  when: network.config.consensus == 'raft' and add_new_org
  tags:
    - notest

# This task fetches the new peer_id 
- name: Get peer_id
  set_fact:
    peer_id: "{{ peer_id.results[0].json.result }}"
  when: network.config.consensus == 'raft' and add_new_org
  tags:
    - notest

# This task creates the Constellation Manager value file for each node of organization
- name: Create value file for constellation TM for each node in the organization
  include_role:
    name: helm_component
  vars:
    component_name: "{{ name }}{{ peer.name }}constellation"
    type: "constellation"
    genesis: "{{ lookup('file', '{{ network.config.genesis }}') | b64encode }}"
    staticnodes: "{{ lookup('file', '{{ network.config.staticnodes }}') | from_yaml | to_nice_json }}"
  loop: "{{ peers }}"
  loop_control: 
    loop_var: peer

- name: Git push
  include_role:
    name: "{{ playbook_dir }}/../../shared/configuration/roles/git_push"
  vars:
    GIT_DIR: "{{ playbook_dir }}/../../../"
    gitops: "{{ item.gitops }}"
    GIT_RESET_PATH: "platforms/quorum/configuration"
    msg: "[ci skip] Pushing Peer files"
  tags:
    - notest
