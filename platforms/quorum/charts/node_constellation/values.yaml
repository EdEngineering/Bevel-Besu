##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

#Provide the number of replicas for pods
#Eg. replicaCount: 1
replicaCount: 1

metadata:
  #Provide the namespace for the Quorum node
  #Eg. namespace: example-quo
  namespace: default
  #Provide the custom labels  
  #NOTE: Provide labels other than name, release name , release service, chart version , chart name, run
  #These lables will not be applied to VolumeClaimTemplate of StatefulSet as labels are automatically picked up by Kubernetes
  #Eg. labels:
  #      role: minter
  labels: 

#These are the various docker images being used by this chart. update them as needed
images:
  #Provide the valid image name and version for quorum node
  #Eg. node: quorumengineering/quorum:2.1.1
  node: quorumengineering/quorum:2.1.1
  #Provide the valid image name and version to read certificates from vault server 
  #Eg. alpineutils: hyperledgerlabs/alpine-utils:1.0
  alpineutils: hyperledgerlabs/alpine-utils:1.0
  #Provide the valid image name and version for quorum constellation
  #Eg. constellation: quorumengineering/constellation:0.3.2
  constellation: quorumengineering/constellation:0.3.2

node:
  #Provide the name for Quorum node
  #Eg. name: node-1
  name: node-1
  #Provide the status of the node as default,additional
  #Eg. status: additional
  status: additional
  #Provide the id which is obtained when the new peer is added for raft consensus
  #This field is only for RAFT consensus and only when a new node is added to existing network
  #Eg. peer_id: 5
  peer_id: 5
  #Provide the consesus for the Quorum network
  # values can be 'raft' or 'ibft'
  #Eg. consensus: raft 
  consensus: ibft
  #Provide additional node identity
  #Eg. subject: "O=Warehouse,OU=Warehouse,L=42.36/-71.06/Boston,C=US"
  subject:
  #Provide the mountpath for Quorum pod
  #Eg. mountPath: /etc/quorum/qdata
  mountPath: /etc/quorum/qdata
  #Provide the docker secret name in the namespace
  #Eg. imagePullSecret: regcred
  imagePullSecret: regcred
  #Provide the keystore file name
  #Eg. keystore: keystore_1
  keystore: keystore_1
  #Provide the k8s service type
  servicetype: ClusterIP
  #Provide the container and service ports
  ports:
    rpc: 8546
    raft: 50401
    constellation: 9001
    quorum: 21000

vault:
  #Provide the Vault Address from where secrets will be read
  #Eg. address: http://vault.internal.demo.aws.blockchaincloudpoc.com:9000
  address: 
  #Provide the Vault secret path from where secrets will be read
  #Eg. secretprefix: secret/org1/crypto/node_1
  secretprefix: secret/org1/crypto/node_1
  #Provide the serviceaccount which is verified with Vault
  #Eg. serviceaccountname: vault-auth
  serviceaccountname: vault-auth
  #Provide the key name from where quorum secrets will be read
  #Eg. keyname: quorum
  keyname: quorum
  #Provide the key name from where transaction-manager secrets will be read
  #Eg. tm_keyname: tm
  tm_keyname: tm
  #Provide the service role which is verified with Vault
  #Eg. role: vault-role
  role: vault-role
  #Provide the Vault auth-path which is created for the namespace
  #Eg. authpath: quorumorg1
  authpath: quorumorg1

#Provide the genesis.json file in base64 format
#Eg. genesis: ewogICAgImFsbG9jIjogewogICAgICAgICIwOTg2Nzk2ZjM0ZDhmMWNkMmI0N2M3MzQ2YTUwYmY2
#     OWFhOWM1NzcyIjogewogICAgICAgICAgICAiYmFsYW5jZSI6ICIxMDAwMDAwMDAwMDAwMDAwMDAw
#     MDAwMDAwMDAwIgogICAgICAgIH0sCiAgICAgICAgImY2MjkyNTQ1YWVjNTkyMDU4MzQ
genesis: 

#Provide the staticnodes as an array
#Eg. staticnodes: 
#  - enode://293ce022bf114b14520ad97349a1990180973885cc2afb6f4196b490397e164fabc87900736e4b685c5f4cf31479021ba0d589e58bd0ea6792ebbfd5eb0348af@node1.quo.demo.aws.blockchaincloudpoc.com:15011?discport=0&raftport=15012
#  - enode://4e7a1a15ef6a9bbf30f8b2a6b927f4941c9e80aeeeed14cfeeea619f93256b41ef9994b9a8af371f394c2a6de9bc6930e142c0350399a22081c518ab2d27f92a@node2.quo.demo.aws.blockchaincloudpoc.com:15021?discport=0&raftport=15022
#  - enode://947fa59385da72f4a68b7348ef5dab7e759148b48b30892c29b7b03a872233a6475a13fd5df62ea75abff9981d459606c1f878cd6ab929307eac6b56b19424bd@node3.quo.demo.aws.blockchaincloudpoc.com:15031?discport=0&raftport=15032
#  - enode://b28ac5bd1c554d05d68db65b0c3351838249e5b935e04d4b361745b74e6c7b3379927eefc11a5fef605fa64d14d000645e182662c51f5bf4a9dd228377f0e1ba@node4.quo.demo.aws.blockchaincloudpoc.com:15041?discport=0&raftport=15042
staticnodes: 

constellation:
  #Provide the constellation url that is reachable other nodes 
  #Eg. url: 'http://node1.quo.demo.aws.blockchaincloudpoc.com:15013/'
  url:
  #Provide the constellation persistent data storage
  #Eg. storage: 'bdb:/etc/quorum/qdata/database'  # bdb:path (BerkeleyDB)
  storage: "bdb:/etc/quorum/qdata/database"
  #Provide if constellation will use tls. 
  # Options:
  ##   - strict: All connections to and from this node must use TLS with mutual
  ##     authentication. 
  ##   - off: Mutually authenticated TLS is not used for in- and outbound
  ##     connections, although unauthenticated connections to HTTPS hosts are
  ##     still possible. This should only be used if another transport security
  ##     mechanism like WireGuard is in place.
  #Eg. tls: 'strict'
  tls: "strict"
  #Provide one node to connect for bootstrap. This should be reachable from this node
  #Eg. othernodes: 'http://node1.quo.demo.aws.blockchaincloudpoc.com:15013/'
  othernodes: 
  #Provide the server/client  trust configuration for constellation nodes. 
  # options are: "ca-or-tofu", "ca", "tofu"
  # Eg: trust: "tofu"
  trust: tofu

proxy:
  #This will be the proxy/ingress provider. Can have values "ambassador" or "haproxy"
  # TODO "haproxy" has not been tested
  #Eg. provider: "ambassador"
  provider: "ambassador"
  #This field contains the external URL suffix of the organization
  #Eg. external_url_suffix: org1.blockchaincloudpoc.com
  external_url_suffix:
  # Following are the ports that are exposed externally via the proxy
  rpcport: 15010
  quorumport: 15011
  portConst: 15013
  portRaft: 15012

storage:
  #Provide the kubernetes storageclass for node
  #Eg. storageclassname: awsstorageclass
  storageclassname: awsstorageclass 
  #Provide the memory for node
  #Eg. storagesize: 1Gi
  storagesize: 1Gi
