##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

---
- name: Converge
  hosts: localhost
  connection: local
  vars:
    privilege_escalate: true            #escalate root priviledge for default test
    install_os: "linux"                 #Default to linux OS
    install_arch:  "amd64"              #Default to amd64 architecture
    bin_install_dir:  "~/bin"
    network:
      type: "corda"
      docker:
        url: "test_url"
        username: "test_username"
        password: "test_password"
      network_services:
      - service:
        type: doorman
        uri: test-url
        certificate: "{{ playbook_dir }}/build/ambassador.crt"
      env:
        type: test               # tag for the environment. Important to run multiple flux on single cluster
        proxy: ambassador                  # values can be 'haproxy' or 'ambassador'
        external_dns: disabled
        retry_count: 20
      organizations:
        - organization:
          name: test
          subject: "CN=DLT Root CA,OU=DLT,O=DLT,L=London,C=GB"
          vault:
            url: http://localhost:9090/
            root_token: root
          external_url_suffix: test_url
          k8s: 
            config_file: "/tmp/molecule/kind-default/kubeconfig"
            context: "kind"
          gitops:
            git_protocol: "https"
            git_url: test_git_https
            branch: test_branch
            chart_source: charts
            release_dir: configuration/molecule/doorman/test
          cloud_provider: aws
          services:
            doorman:
              name: doorman
              subject: "CN=Corda Doorman CA,OU=DLT,O=DLT,L=Berlin,C=DE"
              db_subject: "/C=US/ST=California/L=San Francisco/O=DB/OU=DBA/CN=mongoDB"
              type: doorman
              tls: "on"
              ports:
                servicePort: 8080
                targetPort: 8080
  pre_tasks:
    - name: Create temp roles dir folder
      file:
        path: "{{ playbook_dir }}/../../shared/configuration"
        state: directory

    - name: Copy the roles
      copy:
        src: "{{ playbook_dir }}/../../../../shared/configuration/roles"
        dest: "{{ playbook_dir }}/../../shared/configuration"

    - name: Create temp charts dir folder
      file:
        path: "{{ playbook_dir }}/../../../platforms/shared"
        state: directory
    - name: Copy the charts
      copy:
        src: "{{ playbook_dir }}/../../../../shared/charts"
        dest: "{{ playbook_dir }}/../../../platforms/shared/"

    # Copying openssl.conf to molecule playbook directory
    - name: "Copy openssl.conf to molecule directory"
      copy:
        src: "{{ playbook_dir }}/../../openssl.conf"
        dest: "{{ playbook_dir }}"

  tasks:
    - name: "Test setup/doorman role"
      include_role:
        name: "setup/doorman"
      vars:
        services: "{{ item.services }}"
        organisation: "{{ item.name | lower }}"
        component_ns: "{{ item.name | lower }}-ns"
        kubernetes: "{{ item.k8s }}"
        vault: "{{ item.vault }}"
        gitops: "{{ item.gitops }}"
      loop: "{{ network['organizations'] }}"
