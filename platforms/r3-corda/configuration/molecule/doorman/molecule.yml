##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

---
dependency:
  name: galaxy      # defines that there is a dependency on ansible galaxy
driver:
  name: docker      # driver is docker as we will run the tests on a docker container
lint: |  
  yamllint .    # this is the basic lint for yaml files. The file .yamllint has the rules and is being run at . directory.
platforms:                      # this is where we define the test platforms (here we have one platform which is docker image)
  - name: kind-default                  # The ansible controller will create an inventory host with this name
    groups:
    - k8s                               # This is the ansible inventory group
    image: bsycorp/kind:latest-1.23     # This is the docker image which will be used to spin up the container. We are using kind image
    privileged: True                    # Provides that the docker image will run as root user
    override_command: no                # This will ensure the default docker image startup command is executed
    exposed_ports:                      # Expose docker ports
      - 8443/tcp
      - 10080/tcp
    published_ports:
      - 0.0.0.0:${TEST_CLUSTER_PORT:-8443}:8443/tcp    # Map exposed ports to localhost
      - 0.0.0.0:10080:10080/tcp
    pre_build_image: yes                                # This will direct molecule NOT to rebuild the image (hence we do not need the Dockerfile.j2)
  - name: vault-default
    image: index.docker.io/vault:1.7.0
    privileged: True
    override_command: True
    command: server -dev -dev-root-token-id="root"
    exposed_ports:
      - 8200/tcp
    published_ports:
      - 0.0.0.0:9090:8200/tcp
    pre_build_image: yes
provisioner:                                            # This is the main provisioner which will execute (ansible is default)
  name: ansible
  log: True                                             # Shows 1 level of ansible logs                                   # Uses default ansible lint to verify syntax of ansible playbooks and roles. Note that the format is different for molecule3
  env:                                                              # Passing env variables to ansible controller
    K8S_AUTH_KUBECONFIG: /tmp/molecule/kind-default/kubeconfig
    KUBECONFIG: /tmp/molecule/kind-default/kubeconfig
    ANSIBLE_ROLES_PATH: ${MOLECULE_PROJECT_DIRECTORY}/roles
verifier:                                               # Uses ansible for verification/assertion after the roles are executed
  name: ansible                                         # This is when verify.yml will be executed
