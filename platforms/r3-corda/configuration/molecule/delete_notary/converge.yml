##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

---
- name: Converge
  hosts: localhost
  connection: local
  vars:
    privilege_escalate: true            #escalate root priviledge for default test
    install_os: "linux"                 #Default to linux OS
    install_arch:  "amd64"              #Default to amd64 architecture
    bin_install_dir:  "~/bin"
    helm:
      os: "{{ install_os }}"
      arch: "{{ install_arch }}"
      bin_directory: "{{ bin_install_dir }}"
      checksum: ""
      version: "v3.2.4"
 
    tmp_directory: "{{ lookup('env', 'TMPDIR') | default('/tmp',true) }}"
    aws_cli:
      bin_directory: "~/bin"

    network:
      type: "corda"
      docker:
        url: "test_url"
        username: "test_username"
        password: "test_password"
      env:
        retry_count: 30
        proxy: haproxy
      network_services:
      - service:
        type: doorman
        uri: http://<MINIKUBE_IP_ADDRESS>:30030
        certificate: /home/bevel/platforms/r3-corda/configuration/build/corda/doorman/tls/ambassador.crt
      - service:
        type: networkmap
        uri: http://<MINIKUBE_IP_ADDRESS>:30040
        certificate: /home/bevel/platforms/r3-corda/configuration/build/corda/networkmap/tls/ambassador.crt
    
    kubernetes:
      config_file: "/tmp/molecule/kind-default/kubeconfig"  
      context: "kind"

    item:
      vault:
        url: http://localhost:9090/
        root_token: root
      k8s:
        config_file: "/tmp/molecule/kind-default/kubeconfig"  
        context: "kind"
      cloud_provider: aws
   
  pre_tasks:
    - name: Create temp roles dir folder
      file:
        path: "{{ playbook_dir }}/../../shared/configuration"
        state: directory

    - name: Copy the roles
      copy:
        src: "{{ playbook_dir }}/../../../../shared/configuration/roles"
        dest: "{{ playbook_dir }}/../../shared/configuration"

    - name: Create a k8s namespace for docker creds test
      k8s:
        name: notaryname
        kind: Namespace
        state: present
        kubeconfig: "/tmp/molecule/kind-default/kubeconfig"
        context: "kind"
      changed_when: false

    - name: Disable secret vault path
      shell: |
       vault secrets disable secretsv2/
      environment:
        VAULT_ADDR: "http://localhost:9090"
        VAULT_TOKEN: "root"
      delegate_to: localhost
      changed_when: false

    - name: Enable secret vault path
      shell: |
       vault secrets enable -version=2 -path=secretsv2 kv
      environment:
        VAULT_ADDR: "http://localhost:9090"
        VAULT_TOKEN: "root"
      delegate_to: localhost
      changed_when: false
     
    - name: Write crypto material to Vault
      shell: |
        vault kv put secretsv2/crypto/testcorda ca.testorderer-cert.pem="TEST CA_TESTORDERER_CERTIFICATE_PEM" testorderer-CA.key="12345"
      environment:
        VAULT_ADDR: "http://localhost:9090"
        VAULT_TOKEN: "root"
      delegate_to: localhost
      tags:
        molecule-idempotence-notest
    
    - name: Create Ambassador creds for secret
      k8s:
        kind: Secret
        namespace: notaryname
        name: "secret-ambassador-certs"
        kubeconfig: "/tmp/molecule/kind-default/kubeconfig"
        context: "kind"
        state: present
      changed_when: false

    - name: Create Ambassador creds for test1
      k8s:
        kind: Secret
        namespace: notaryname
        name: "test1-ambassador-certs"
        kubeconfig: "/tmp/molecule/kind-default/kubeconfig"
        context: "kind"
        state: present
      changed_when: false
    
    - name: Vault Auth enable path for secret
      shell: |
        vault auth enable --path="cordasecret" kubernetes
      environment:
        VAULT_ADDR: "http://localhost:9090"
        VAULT_TOKEN: "root"
      tags:
         molecule-idempotence-notest
         
    - name: Vault Auth enable path for test1
      shell: |
        vault auth enable --path="cordatest1" kubernetes
      environment:
        VAULT_ADDR: "http://localhost:9090"
        VAULT_TOKEN: "root"
      tags:
         molecule-idempotence-notest
  
    - name: Create policy for Access Control for secret
      shell: |
        cd ./build    
        echo "path \"secretsv2/*\" {
            capabilities = [\"read\", \"list\"]
        }"  >>  vault-crypto-secret-ro.hcl
      environment:
        VAULT_ADDR: "http://localhost:9090"
        VAULT_TOKEN: "root"
      tags:
        molecule-idempotence-notest
      
    - name: Write policy to the vault for secret
      shell: |
        cd ./build 
        vault write sys/policy/vault-crypto-secret-ro policy="@vault-crypto-secret-ro.hcl"
      environment:
        VAULT_ADDR: "http://localhost:9090"
        VAULT_TOKEN: "root"
      tags:
        molecule-idempotence-notest

    - name: Create policy for Access Control for test1
      shell: |
        cd ./build    
        echo "path \"test1/*\" {
            capabilities = [\"read\", \"list\"]
        }"  >>  vault-crypto-test1-ro.hcl
      environment:
        VAULT_ADDR: "http://localhost:9090"
        VAULT_TOKEN: "root"
      tags:
        molecule-idempotence-notest
    
    - name: Write policy to the vault for test1
      shell: |
        cd ./build 
        vault write sys/policy/vault-crypto-test1-ro policy="@vault-crypto-test1-ro.hcl"
      environment:
        VAULT_ADDR: "http://localhost:9090"
        VAULT_TOKEN: "root"
      tags:
        molecule-idempotence-notest

  tasks:
    - name: "Copy openssl.conf to molecule directory"                 # Copying opel.confnss to molecule playbook directory
      copy:
        src: "{{ playbook_dir }}/../../openssl.conf"
        dest: "{{ playbook_dir }}"
      
    ####################################################################################
    # Testing delete/vault_secrets role for notary
    - name: "Test delete/vault_secrets role for notary"
      include_role:
        name: "configuration/roles/delete/vault_secrets"
      vars:
        auth_lists:
          stdout_lines:
            - "abc"
        vault_policy_result:
          failed: True
        root_certs:
          failed: True
        networkmap_certs:
          failed: True
        mongoCA_certs:
          failed: True
        mongodb_certs:
          failed: True
        ambassador_tls_certs:
          failed: True 
        nms_root_certs:
          failed: True
        aws_cli_stat_result: 
          stat: 
            exists: True
        component_name: notaryname
        kubernetes:
          config_file: "/tmp/molecule/kind-default/kubeconfig"  
          context: "kind"
        services:
          peer1:
            name: secret
          peer2:
            name: test1
        component_type: notary
