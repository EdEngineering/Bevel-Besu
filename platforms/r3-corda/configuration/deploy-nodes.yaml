##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

#########################
# Playbook to create deployment files for namespaces, service account and clusterrolebinding
# Playbook arguments: complete network.yaml
#########################
- hosts: ansible_provisioners
  gather_facts: no
  no_log: "{{ no_ansible_log | default(false) }}"
  tasks:      
  # ----------------------------------------------------------------------  
  # Wait for network services to respond  
  - name: Check that network services uri are reachable
    uri:
      url: "{{ item.uri }}"
      validate_certs: no
    register: this
    until: this.status == 200 or this.status == 401
    loop: "{{ network['network_services'] }}"
    retries: "{{ network.env.retry_count}}"
    delay: 70
    ignore_errors: yes

  # ----------------------------------------------------------------------  
  # Deploy notaries
  - name: 'Deploy notary'
    include_role:
      name: setup/notary
    vars:
      services: "{{ item.services }}"
      node: "{{ item.services.notary }}"
      organisation: "{{ item.name | lower }}"
      component_ns: "{{ item.name | lower }}-ns"
      kubernetes: "{{ item.k8s }}"
      vault: "{{ item.vault }}"
      gitops: "{{ item.gitops }}" 
      cordapps: "{{ item.cordapps | default() }}"
    loop: "{{ network['organizations'] }}"
    when: network['type'] == 'corda' and item.type.find('notary') != -1

  # ----------------------------------------------------------------------  
  # Deploy all other nodes
  - name: 'Deploy nodes'
    include_role:
      name: setup/node
    vars:
      organisation: "{{ item.name | lower }}"
      component_ns: "{{ item.name | lower }}-ns"
      services: "{{ item.services }}"
      kubernetes: "{{ item.k8s }}"
      vault: "{{ item.vault }}"
      cordapps: "{{ item.cordapps | default() }}"
      gitops: "{{ item.gitops }}" 
    loop: "{{ network['organizations'] }}"  
    when: network['type'] == 'corda' and item.type == 'node'

  # delete build directory
  - name: Remove build directory
    file:
      path: "./build"
      state: absent
