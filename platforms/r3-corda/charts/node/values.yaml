##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

#Provide the nodeName for node
#Eg. nodeName: bank1
nodeName: 

#Provide the replica set for node deployed
#Eg. replicas: 1
replicas: 

metadata:
  #Provide the namespace
  #Eg. namespace: default
  namespace: 
  #Provide the custom labels
  #NOTE: Provide labels other than name, release name , release service, chart version , chart name , app.
  #Eg. labels:
  #      role: create_channel
  labels:
  
image:
  #Provide the containerName of image
  #Eg. containerName: hyperledgerlabs/h2:2018
  #Note: For public certificate use: hyperledgerlabs/corda:3.3.0-corda-corda-20190502
  #      For private certificate use: hyperledgerlabs/corda:3.3.0-corda-root-20190502
  containerName: 
  #Provide the name of image for init container
  #Eg. name: hyperledgerlabs/alpine-utils:1.0
  initContainerName: 
  #Provide the name of image for git clone container
  #Eg. gitContainerName: hyperledgerlabs/corda-git:0.0.2-corda-git-jar
  gitContainerName:     
  #Provide the image pull secret of image
  #Eg. pullSecret: regcred
  imagePullSecret: 
  #Provide true or false if private certificate to be added
  #Eg. privateCertificate: true
  privateCertificate: 
  #Provide true or false if private certificate to be added
  #Eg. doormanCertAlias: doorman.fracordakubetest7.com
  doormanCertAlias:  
  #Provide true or false if private certificate to be added
  #Eg. networkmapCertAlias: networkmap.fracordakubetest7.com
  networkmapCertAlias: 
  
  
#For more information for node.Conf fields please refer to: https://docs.corda.net/releases/release-V3.3/corda-configuration-file.html
nodeConf:
  #The host and port on which the node is available for protocol operations over ArtemisMQ.
  p2p:
    url: 
    port: 
  #Specify the ambassador host:port which will be advertised in addition to p2paddress
  ambassadorAddress: 
  rpcSettings:
    useSsl: 
    standAloneBroker: 
    address: 
    adminAddress: 
    ssl:
      certificatesDirectory:
      sslKeystorePath: 
      trustStoreFilePath: 
  #Provide the legalName for node
  #Eg. legalName: "O=Bank1,L=London,C=GB,CN=Bank1"
  legalName: 
  messagingServerAddress:
  jvmArgs:
  systemProperties:
  sshd:
    port:
  exportJMXTo:
  transactionCacheSizeMegaBytes: 
  attachmentContentCacheSizeMegaBytes: 
  notary:
    validating: 
  detectPublicIp: 
  database: 
    exportHibernateJMXStatistics:  
  #Provide the h2Url for node
  #Eg. h2Url: bank1h2
  dbUrl: 
  #Provide the h2Port for node
  #Eg. h2Port: 9101
  dbPort: 
  dataSourceClassName: 
  dataSourceUrl: 
  jarPath: 
  #Provide the nms for node
  #Eg. nms: "http://rp-elb-fra-corda-kube-cluster7-2016021309.us-west-1.elb.amazonaws.com:30050"
  networkMapURL: 
  doormanURL: 
  compatibilityZoneURL:
  webAddress: 
  #Provide the jar Version for corda jar and finanace jar
  #Eg. jarVersion: 3.3-corda
  jarVersion: 
  #Provide the devMode for corda node
  #Eg. devMode: true
  devMode: 
  #Provide the useHTTPS for corda node
  #Eg. useHTTPS: false
  useHTTPS: 
  #Provide the enviroment variables to be set
  env:
    - name: JAVA_OPTIONS
      value: 
    - name: CORDA_HOME
      value: 
    - name: BASE_DIR
      value: 

credentials:
  #Provide the dataSourceUser for corda node
  #Eg. dataSourceUser: 
  dataSourceUser: 
  #Provide the rpcUser for corda node
  #Eg. rpcUser: bank1operations
  rpcUser:
    - name: 
      permissions: 
    - name: 
      permissions: 
    - name: 
      permissions: 

volume:
  #Provide the base path
  #Eg. mountPath: "/opt/h2-data"
  baseDir: 

resources:
  #Provide the limit memory for node
  #Eg. limits: "1Gi"
  limits: 
  #Provide the requests memory for node
  #Eg. requests: "1Gi"
  requests: 

storage:
  #Provide the provisioner for node
  #Eg. provisioner: kubernetes.io/aws-ebs
  provisioner: 
  #Provide the name for node
  #Eg. name: bank1nodesc
  name: 
  #Provide the memory for node
  #Eg. memory: 4Gi
  memory: 
  parameters:
    #Provide the type for node
    #Eg. type: gp2
    type: 
    # Provide whether the EBS volume should be encrypted or not
    #Eg. encrypted: "true"
    encrypted: 
  #   annotations:
  #     key: "value"
  annotations:


service:
# Note: Target ports are dependent on image being used. Please change them accordingly
#       nodePort should be kept empty while using service type as ClusterIP ( Values.service.type )
  #Provide the type of service
  #Eg. type: NodePort or LoadBalancer etc
  type: 
  p2p:
    #Provide the p2p port for node
    #Eg. port: 10007
    port: 
    #Provide the p2p node port for node
    #Eg. port: 30007
    nodePort: 
    #Provide the p2p targetPort for node
    #Eg. targetPort: 30007
    targetPort: 
  rpc:
    #Provide the rpc port for node
    #Eg. port: 10008
    port: 
    #Provide the rpc targetPort for node
    #Eg. targetPort: 10003
    targetPort: 
    #Provide the rpc node port for node 
    #Eg. nodePort: 30007
    nodePort: 
  rpcadmin:
    #Provide the rpcadmin port for node
    #Eg. port: 10108
    port: 
    #Provide the rpcadmin targetPort for node
    #Eg. targetPort: 10005
    targetPort: 
    #Provide the rpcadmin node port for node 
    #Eg. nodePort: 30007
    nodePort:
  #   annotations:
  #     key: "value"
  annotations: 
      
deployment:
  annotations: 
#   annotations:
#     key: "value"

pvc:
  #   annotations:
  #     key: "value"
  annotations: 

vault:
  #Provide the vault server address
  #Eg. address: http://54.226.163.39:8200
  address: 
  #Provide the vaultrole
  #Eg. role: vault-role
  role: 
  #Provide the authpath
  #Eg. authpath: cordabank1
  authpath: 
  #Provide the serviceaccountname
  #Eg. serviceaccountname: vault-auth-issuer
  serviceaccountname: 
  #Provide the secretprefix
  #Eg. dbsecretprefix: bank1/credentials/database
  dbsecretprefix: 
  #Provide the secretprefix
  #Eg. rpcusersecretprefix: bank1/credentials/rpcusers
  rpcusersecretprefix: 
  #Provide the secretprefix
  #Eg. keystoresecretprefix: bank1/credentials/keystore
  keystoresecretprefix: 
  #Provide the secretprefix
  #Eg. certsecretprefix: bank1/certs
  certsecretprefix: 
  #Provide the secretprefix
  #Eg. cordappsreposecretprefix: bank1/credentials/cordapps  
  cordappsreposecretprefix:

cordapps: 
  #Provide if you want to provide jars in cordapps
  #Eg. getcordapps: true or false
  getcordapps:  
  repository:
  jars:
    #Provide url to download the jar using wget cmd
    #Eg. url: https://ci-artifactory.corda.r3cev.com/artifactory/corda-releases/net/corda/corda-finance/3.3-corda/corda-finance-3.3-corda.jar 
    - url: 
    - url:
    
healthcheck:
  #Provide the interval in seconds you want to iterate till db to be ready
  #Eg. readinesscheckinterval: 5
  readinesscheckinterval: 
  #Provide the threshold till you want to check if specified db up and running
  #Eg. readinessthreshold: 2
  readinessthreshold: 


ambassador: 
  #Provides component name
  #Eg. component_name: node
  component_name: 
  #Provides the suffix to be used in external URL
  #Eg. external_url_suffix: org1.blockchaincloudpoc.com
  external_url_suffix: 
  #Provide the p2p port for ambassador
  #Eg. p2p_ambassador: 10007
  p2p_ambassador:
