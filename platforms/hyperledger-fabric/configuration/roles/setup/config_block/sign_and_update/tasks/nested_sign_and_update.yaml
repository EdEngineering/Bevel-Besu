##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

############################################################################################
# This task initiates cli creation and signing of the block
############################################################################################

# checking for fabric cli
- name: "Check if fabric cli is already present"
  k8s_info:
    kind: Pod
    namespace: "{{ org.name }}-net"
    kubeconfig: "{{ org.k8s.config_file }}"
    context: "{{ org.k8s.context }}"
    label_selectors:
      - app = cli
  register: existing_cli

# Create the value file for org first peer
- name: "create cli value files for {{peer.name}}-{{ org.name }} for signing the modified configuration block"
  include_role:
    name: k8_component
  vars:
    component_type_name: "{{ participant.name }}"
    component_type: "existing_peer_cli_job"    
    component_name: "cli-{{ channel_name }}-{{ participant.name }}-{{ peer.name }}"
    peer_name: "{{ peer.name }}"
    component_ns: "{{ participant.name | lower}}-net"
    vault: "{{ org.vault }}"
    fabrictools_image: "hyperledger/fabric-tools:{{ network.version }}"
    alpine_image: "{{ docker_url }}/alpine-utils:1.0"
    channel_name: "{{ channel_name }}"
    storage_class: "{{ participant.name }}sc"
    release_dir: "./build"
  when: existing_cli.resources|length == 0

# Starts the cli with valuefile generated above
- name: "start cli {{peer.name}}-{{ org.name }}"
  shell: |
    KUBECONFIG={{ org.k8s.config_file }} helm upgrade --install -f ./build/{{ participant.name }}/existing_peer_cli_job.yaml {{ peer.name }}-{{ participant.name }}-cli {{playbook_dir}}/../../../{{org.gitops.chart_source}}/fabric_cli
  when: existing_cli.resources|length == 0

# waiting for fabric cli
- name: "Check if fabric cli is present"
  k8s_info:
    kind: Pod
    namespace: "{{ org.name }}-net"
    kubeconfig: "{{ org.k8s.config_file }}"
    context: "{{ org.k8s.context }}"
    label_selectors:
      - app = cli
  register: get_cli
  until: ("Running" in get_cli|json_query('resources[*].status.phase'))
  retries: "{{ network.env.retry_count}}"
  delay: 40

############################################################################################
# This task fetches the modified config block from build and the admin signs the config block
# Copy the block back to the build folder after signature
- name: signing from the admin of {{ org.name }}
  shell: |
    export PEER_CLI=$(KUBECONFIG={{ kubernetes.config_file }} kubectl get po -n {{ org.name | lower }}-net | grep "cli" | head -n 1 | awk '{print $1}')
    KUBECONFIG={{ kubernetes.config_file }} kubectl cp ./build/{{ channel_name | lower}}_config_block.pb {{ org.name | lower }}-net/${PEER_CLI}:/opt/gopath/src/github.com/hyperledger/fabric/peer/{{ channel_name | lower}}_config_block.pb
    KUBECONFIG={{ kubernetes.config_file }} kubectl exec -n {{ org.name | lower }}-net ${PEER_CLI} -- peer channel signconfigtx -f {{ channel_name | lower}}_config_block.pb
    KUBECONFIG={{ kubernetes.config_file }} kubectl cp {{ org.name | lower }}-net/${PEER_CLI}:/opt/gopath/src/github.com/hyperledger/fabric/peer/{{ channel_name | lower}}_config_block.pb ./build/{{ channel_name | lower}}_config_block.pb
  vars: 
    kubernetes: "{{ org.k8s }}"

############################################################################################
# Delete the cli   
- name: "delete cli {{ peer.name }}-{{ participant.name }}-cli"
  shell: |
    KUBECONFIG={{ org.k8s.config_file }} helm uninstall {{ peer.name }}-{{ participant.name }}-cli
  when: existing_cli.resources|length == 0
