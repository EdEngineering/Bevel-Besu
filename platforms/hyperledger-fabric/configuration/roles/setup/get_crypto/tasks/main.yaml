##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

#############################################################################################
# This role saves the crypto from Vault into ansible_provisioner
#############################################################################################

# Ensure admincerts directory is present in build
- name: Ensure admincerts directory exists
  file:
    path: "{{msp_path}}/admincerts"
    state: directory

# Save the admincerts file
- name: Save admincerts
  local_action: copy content="{{ vault_output['data'].data.admincerts }}" dest="{{msp_path}}/admincerts/Admin@{{component_name}}-cert.pem"

# Ensure cacerts directory is present in build
- name: Ensure cacerts directory exists
  file:
    path: "{{msp_path}}/cacerts"
    state: directory

# Save the cacerts file
- name: Save cacerts
  local_action: copy content="{{ vault_output['data'].data.cacerts }}" dest="{{msp_path}}/cacerts/ca-{{component_name}}-7054.pem"
  when: network.env.proxy == 'none'
- name: Save cacerts for other proxy
  local_action: copy content="{{ vault_output['data'].data.cacerts }}" dest="{{msp_path}}/cacerts/ca-{{ component_name }}-{{ item.external_url_suffix }}-8443.pem"
  when: network.env.proxy != 'none'

# Ensure tlscacerts directory is present in build
- name: Ensure tlscacerts directory exists
  file:
    path: "{{msp_path}}/tlscacerts"
    state: directory

# Save the tlscacerts file
- name: Save tlscacerts
  local_action: copy content="{{ vault_output['data'].data.tlscacerts }}" dest="{{msp_path}}/tlscacerts/ca-{{component_name}}-7054.pem"
  when: network.env.proxy == 'none'
- name: Save tlscacerts
  local_action: copy content="{{ vault_output['data'].data.tlscacerts }}" dest="{{msp_path}}/tlscacerts/ca-{{ component_name }}-{{ item.external_url_suffix }}-8443.pem"
  when: network.env.proxy != 'none'
