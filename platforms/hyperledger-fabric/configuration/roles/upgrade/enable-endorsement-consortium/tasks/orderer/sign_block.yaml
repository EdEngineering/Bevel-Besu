##############################################################################################
#  Copyright Mohit Vaish. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

#############################################################################################
# Signs the modified configuration block
#############################################################################################

# Checking for fabric cli
- name: "Check if fabric cli is already present"
  k8s_info:
    kind: Pod
    namespace: "{{ component_ns }}"
    kubeconfig: "{{ org.k8s.config_file }}"
    context: "{{ org.k8s.context }}"
    label_selectors:
      - app = cli
  register: existing_cli

# Create the value file for creater org first peer
- name: "Create valuefile for cli {{ peer.name }}-{{ org.name }}"
  include_role:
    name: k8_component
  vars:
    component_type_name: "{{ participant.name }}"
    component_type: "existing_peer_cli_job"
    component_name: "cli-{{ channel_name }}-{{ org.name }}-{{ peer.name }}"
    peer_name: "{{ peer.name }}"
    vault: "{{ org.vault }}"
    fabrictools_image: "hyperledger/fabric-tools:{{ network.version }}"
    alpine_image: "{{ docker_url }}/alpine-utils:1.0"
    channel_name: "{{ channel_name }}"
    storage_class: "{{ org.name }}sc"
    release_dir: "{{ build_path }}"
  when: existing_cli.resources|length == 0

# Start the cli using the value file created in the previous step
- name: "Start cli"
  shell: |
    KUBECONFIG={{ org.k8s.config_file }} helm upgrade --install -f {{ build_path }}/{{ participant.name }}/existing_peer_cli_job.yaml {{ peer.name }}-{{ participant.name }}-cli {{playbook_dir}}/../../../{{org.gitops.chart_source}}/fabric_cli
  when: existing_cli.resources|length == 0

# Waiting for fabric cli to be up
- name: "Waiting for fabric cli to be up"
  k8s_info:
    kind: Pod
    namespace: "{{ component_ns }}"
    kubeconfig: "{{ org.k8s.config_file }}"
    context: "{{ org.k8s.context }}"
    label_selectors:
      - app = cli
  register: get_cli
  until: ("Running" in get_cli|json_query('resources[*].status.phase'))
  retries: "{{ network.env.retry_count }}"
  delay: 40

# This task signs the configuration block
- name: Sign the configuration block
  shell: |
    export PEER_CLI=$(KUBECONFIG={{ org.k8s.config_file }} kubectl get po -n {{ component_ns }} | grep "cli" | head -n 1 | awk '{print $1}')
    KUBECONFIG={{ kubernetes.config_file }} kubectl cp {{ build_path }}/{{ sys_channel_name }}_config_update.pb {{ component_ns }}/${PEER_CLI}:/opt/gopath/src/github.com/hyperledger/fabric/peer/{{ sys_channel_name }}_config_update.pb
    KUBECONFIG={{ kubernetes.config_file }} kubectl exec -n {{ component_ns }} ${PEER_CLI} -- peer channel signconfigtx -f {{ sys_channel_name }}_config_update.pb
    KUBECONFIG={{ kubernetes.config_file }} kubectl cp {{ component_ns }}/${PEER_CLI}:/opt/gopath/src/github.com/hyperledger/fabric/peer/{{ sys_channel_name }}_config_update.pb {{ build_path }}/{{ sys_channel_name }}_config_update.pb
  vars:
    kubernetes: "{{ org.k8s }}"
