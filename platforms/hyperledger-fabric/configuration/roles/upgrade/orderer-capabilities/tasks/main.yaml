##############################################################################################
#  Copyright Mohit Vaish. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

#############################################################################################
# Generates capabilities json and update capabilities of system channel
#############################################################################################

# Remove the build directory
- name: Remove build directory
  file:
    path: "{{ build_path }}"
    state: absent

# Create the build directory
- name: Create build directory if it does not exist
  file:
    path: "{{ build_path }}/channel-artifacts/"
    state: directory

# Copy capabilities json to channel artifacts
- name: Copy capabilities json to channel artifacts
  copy:
    src: "capabilities.json"
    dest: "{{ build_path }}/channel-artifacts/capabilities.json"

# Check or wait for the Orderer pod
- name: Check if orderer pod exists
  include_role:
    name: "{{ playbook_dir }}/../../shared/configuration/roles/check/helm_component"
  vars:
    component_type: "Pod"
    orderer: "{{ network.orderers | first }}"
    org_query: "organizations[?name=='{{ orderer.org_name }}']"
    org: "{{ network | json_query(org_query) | first }}"
    namespace: "{{ org.name | lower }}-net"
    kubernetes: "{{ org.k8s }}"
    label_selectors:
      - app = {{ orderer.name | lower }}

# This task creates the capabilities upgrade script for orderer
- name: Create script file to upgrade sys channel orderer group
  template:
    src: "syschannel/orderer_group_capability.tpl"
    dest: "{{ build_path }}/syschannel-orderer-group-capabilities.sh"
  vars:
    os: "{{ fabric.os }}"
    arch: "{{ fabric.arch }}"
    version: "{{ network.version }}"

# This task updates capability of orderer group in system channel
- name: Update orderer group capabilities of system channel
  include_tasks: orderer_group_capability.yaml
  vars:
    orderer: "{{ network.orderers | first }}"
    org_query: "organizations[?name=='{{ orderer.org_name }}']"
    org: "{{ network | json_query(org_query) | first }}"
    component_name: "{{ org.name | lower }}"
    component_ns: "{{ org.name | lower }}-net"

# check if original channel config and modified config is same
# if that is the case we dont have to proceed doing the channel update
- name: Intialize the variable
  set_fact:
    is_config_same: false

- name: Check if required channel config already exists
  set_fact:
    is_config_same: true
  vars:
    original_config: "{{ lookup('file', '{{ build_path }}/config_orig.json' ) }}"
    modified_config: "{{ lookup('file', '{{ build_path }}/config_modified.json' ) }}"
  when: original_config == modified_config

# This task calls sign_orderer.yaml for the signing of the block by all orderers
- name: Call sign_orderer.yaml to sign from new update block
  include_tasks: sign_orderer.yaml
  vars:
    org_query: "orderers[?org_name=='{{ org.name }}']"
    orderer: "{{ network | json_query(org_query) | first }}"
    component_name: "{{ org.name | lower }}"
    component_ns: "{{ org.name | lower }}-net"
  loop: "{{ network.organizations }}"
  loop_control:
    loop_var: org
  when: org.type == 'orderer' and org.name != creator_orderer and is_config_same  == false

# This task updates the block by the existing orderer
- name: Call update_orderer.yaml to add the new orderer to the existing network
  include_tasks: update_orderer.yaml
  vars:
    org_query: "orderers[?org_name=='{{ org.name }}']"
    orderer: "{{ network | json_query(org_query) | first }}"
    component_name: "{{ org.name | lower }}"
    component_ns: "{{ org.name | lower }}-net"
  loop: "{{ network.organizations }}"
  loop_control:
    loop_var: org
  when: org.type == 'orderer' and org.name == creator_orderer and is_config_same  == false

# This task creates the capabilities upgrade script for orderer
- name: Create script file to upgrade sys channel orderer group
  template:
    src: "syschannel/channel_group_capability.tpl"
    dest: "{{ build_path }}/syschannel-channel-group-capabilities.sh"
  vars:
    os: "{{ fabric.os }}"
    arch: "{{ fabric.arch }}"
    version: "{{ network.version }}"

# This task updates capability of channel group in system channel
- name: Update channel group capabilities of system channel
  include_tasks: channel_group_capability.yaml
  vars:
    orderer: "{{ network.orderers | first }}"
    org_query: "organizations[?name=='{{ orderer.org_name }}']"
    org: "{{ network | json_query(org_query) | first }}"
    component_name: "{{ org.name | lower }}"
    component_ns: "{{ org.name | lower }}-net"

# check if original channel config and modified config is same
# if that is the case we dont have to proceed doing the channel update
- name: Intialize the variable
  set_fact:
    is_config_same: false

- name: Check if required channel config already exists
  set_fact:
    is_config_same: true
  vars:
    original_config: "{{ lookup('file', '{{ build_path }}/config_orig.json' ) }}"
    modified_config: "{{ lookup('file', '{{ build_path }}/config_modified.json' ) }}"
  when: original_config == modified_config

# This task calls sign_orderer.yaml for the signing of the block by all orderers
- name: Call sign_orderer.yaml to sign from new update block
  include_tasks: sign_orderer.yaml
  vars:
    org_query: "orderers[?org_name=='{{ org.name }}']"
    orderer: "{{ network | json_query(org_query) | first }}"
    component_name: "{{ org.name | lower }}"
    component_ns: "{{ org.name | lower }}-net"
  loop: "{{ network.organizations }}"
  loop_control:
    loop_var: org
  when: org.type == 'orderer' and org.name != creator_orderer and is_config_same  == false

# This task updates the block by the existing orderer
- name: Call update_orderer.yaml to add the new orderer to the existing network
  include_tasks: update_orderer.yaml
  vars:
    org_query: "orderers[?org_name=='{{ org.name }}']"
    orderer: "{{ network | json_query(org_query) | first }}"
    component_name: "{{ org.name | lower }}"
    component_ns: "{{ org.name | lower }}-net"
  loop: "{{ network.organizations }}"
  loop_control:
    loop_var: org
  when: org.type == 'orderer' and org.name == creator_orderer and is_config_same  == false
