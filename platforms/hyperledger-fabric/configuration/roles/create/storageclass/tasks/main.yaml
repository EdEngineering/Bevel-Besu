##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

#############################################################################################
# This role creates value files for storage class
#############################################################################################

# Check if StorageClass is created
- name: "Checking if the storage class {{ sc_name }} already exists"
  include_role:
    name: "{{ playbook_dir }}/../../shared/configuration/roles/check/k8_component"
  vars:
    component_type: "StorageClass"
    component_name: "{{ sc_name }}"
    type: "no_retry"

- name: "Set Variable"
  set_fact:
    get_sc: "{{ result }}"

# this task creates {{ component_type }} diretory if not exists
- name: "creating {{ release_dir }}/{{ component_type }} directory"
  include_role:
    name: "{{ playbook_dir }}/../../shared/configuration/roles/check/directory"
  vars:
    path: "{{ release_dir }}/{{ component_type }}"
  when: get_sc.resources|length == 0

#############################################################################################
# This task creates the value file for creating the storage class for Orderer
- name: Create Storage Class value file for orderers
  template:
    src: "{{ sc_templates[type] }}"
    dest: "{{ values_file }}"
  vars:
    type: "{{item.cloud_provider}}-orderer"
    values_file: "{{ release_dir }}/{{ component_type }}/{{ sc_name }}.yaml"
  when: component_type == 'orderer' and get_sc.resources|length == 0


#############################################################################################
# This task creates the value file for creating the storage class for Organizations
- name: Create Storage Class value file for Organizations
  template:
    src: "{{ sc_templates[type] }}"
    dest: "{{ values_file }}"
  vars:
    type: "{{item.cloud_provider}}-peer"
    values_file: "{{ release_dir }}/{{ component_type }}/{{ sc_name }}.yaml"
  when: component_type == 'peer' and get_sc.resources|length == 0

#Git Push : Pushes the above generated files to git directory 
- name: Git Push
  include_role: 
    name: "{{ playbook_dir }}/../../shared/configuration/roles/git_push"
  vars:
    GIT_DIR: "{{ playbook_dir }}/../../../"
    gitops: "{{ item.gitops }}"
    GIT_RESET_PATH: "platforms/hyperledger-fabric/configuration"
    msg: "[ci skip] Pushing Storageclass files"
  when: get_sc.resources|length == 0
  tags:
    - notest

# Check if StorageClass created
- name: "Waiting for the creation of {{ sc_name }} storage class"
  include_role:
    name: "{{ playbook_dir }}/../../shared/configuration/roles/check/k8_component"
  vars:
    component_type: "StorageClass"
    component_name: "{{ sc_name }}"
    type: "retry"
  when: get_sc.resources|length == 0
  tags:
    - notest
