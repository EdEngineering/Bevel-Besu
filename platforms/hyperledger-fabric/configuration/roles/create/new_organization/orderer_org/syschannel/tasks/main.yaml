##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

############################################################################################
## Adding the New Orderer to the json file that will be used inside the orderer cli
- name: "Creating JSON configuration for new organization"
  shell: |
    cd {{ build_path }}
    export FABRIC_CFG_PATH=$PWD
    ./configtxgen -printOrg {{ neworg.name | lower }}MSP > ./channel-artifacts/{{ channel_name }}.json
  register: result

# This task calls nested_main for each new RAFT orderer
- name: Call nested_main.yaml for each orderer under organization
  include_tasks: nested_main.yaml  
  vars:
    component_name: "{{ neworg.name | lower }}"
    component_ns: "{{ neworg.name | lower }}-net"
  loop: "{{ orderers }}"
  loop_control:
    loop_var: orderer

# This task calls sign_orderer.yaml for the signing of the block by all orderers
- name: Call sign_orderer.yaml to sign from new update block
  include_tasks: sign_orderer.yaml
  vars:
    orderer: "{{ org.services.orderers | first }}"
    component_ns: "{{ org.name | lower }}-net"
  loop: "{{ network.organizations }}"
  loop_control:
    loop_var: org
  when: org.type == 'orderer' and org.name != creator_orderer

# This task updates the block by the existing orderer
- name: Call update_orderer.yaml to add the new orderer to the existing network
  include_tasks: update_orderer.yaml
  vars:    
    component_ns: "{{ org.name | lower }}-net"
    orderer: "{{ org.services.orderers | first }}"
  loop: "{{ network.organizations }}"
  loop_control:
    loop_var: org
  when: org.type == 'orderer' and org.name == creator_orderer

- name: reset creator_orderer
  set_fact:
    creator_orderer: ""
