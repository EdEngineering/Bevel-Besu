##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

############################################################################################
# This task creates the json file for the anchor peer update
############################################################################################

# Ensure channel-artifacts dir exists
- name: Ensure channel-artifacts dir exists
  file:
    path: "{{ build_path }}/channel-artifacts"
    state: directory

# remove old anchor file
- name: Remove old anchor file
  file:
    path: "{{ build_path }}/channel-artifacts/{{ channel_name | lower}}-anchorfile.json"
    state: absent
    
# creating new anchor file
- name: Creating new anchor file
  file:
    path: "{{ build_path }}/channel-artifacts/{{ channel_name | lower}}-anchorfile.json"
    state: touch


# Create the values for anchor peer update
- name: "adding new org peers anchor peer information"
  shell: |
    if [ -s {{ build_path }}/channel-artifacts/{{ channel_name | lower}}-anchorfile.json ]
    then
        echo -n "," >> {{ build_path }}/channel-artifacts/{{ channel_name | lower}}-anchorfile.json  
    fi
    if [ {{ network.env.proxy }} == 'none' ]
    then
        echo -n "{\"host\":\"{{ peer.name }}.{{ component_ns }}\",\"port\":7051}" >> {{ build_path }}/channel-artifacts/{{ channel_name | lower}}-anchorfile.json
    else
        echo -n "{\"host\":\"{{ peer.peerAddress.split(":")[0] | to_json }}\",\"port\":{{ peer.peerAddress.split(":")[1] | to_json }}}" >> {{ build_path }}/channel-artifacts/{{ channel_name | lower}}-anchorfile.json
    fi
  loop: "{{ org.services.peers }}"
  loop_control:
    loop_var: peer
  when: peer.type == 'anchor'
