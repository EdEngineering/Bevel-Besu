##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

---
apiVersion: v1
kind: Service
metadata:
  name: {{ $.Values.server.name }}
  namespace: {{ $.Values.metadata.namespace }}
  annotations:
    {{- if $.Values.annotations }}
    {{- range $key, $value := $.Values.annotations.service }}
    {{- range $k, $v := $value }}
      {{ $k }}: {{ $v | quote }}
    {{- end }}
    {{- end }}
    {{- end }} 
    {{- if eq $.Values.proxy.provider "ambassador" }}  
    getambassador.io/config: |
      ---
      apiVersion: ambassador/v2
      kind:  Mapping
      {{ if eq $.Values.proxy.type "orderer" }}
      name:  ca_orderer_{{ $.Values.metadata.namespace }}_mapping
      {{ else }}
      name:  ca_{{ $.Values.metadata.namespace }}_mapping
      {{ end }}
      prefix: /
      host: ca.{{ $.Values.metadata.namespace }}:7054
      service: ca.{{ $.Values.metadata.namespace }}:7054
      {{ if eq $.Values.proxy.type "orderer" }}
      tls: ca_orderer_{{ $.Values.metadata.namespace }}_tls
      {{ else }}
      tls: ca_{{ $.Values.metadata.namespace }}_tls
      {{ end }}
      ---
      apiVersion: ambassador/v2
      kind: TLSContext
      {{ if eq $.Values.proxy.type "orderer" }}
      name: ca_orderer_{{ $.Values.metadata.namespace }}_tls
      {{ else }}
      name: ca_{{ $.Values.metadata.namespace }}_tls
      {{ end }}
      hosts:
      - ca.{{ $.Values.metadata.namespace }}
      secret: ca-{{ $.Values.metadata.namespace }}-ambassador-certs
      min_tls_version: v1.2
  {{ end }}
  labels:
    run: {{ $.Values.server.name }}
    app.kubernetes.io/name: {{ $.Values.server.name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }} 
    {{- include "labels.custom" . | nindent 2 }}
spec:
  type: {{ $.Values.service.servicetype }}
  selector:
    name: {{ $.Values.server.name }}
  ports:
  - name: tcp
    protocol: TCP
    targetPort: 7054
    port: {{ $.Values.service.ports.tcp.clusteripport }}
    {{- if $.Values.service.ports.tcp.nodeport }}
    nodePort: {{ $.Values.service.ports.tcp.nodeport }}
    {{- end }}
  - name: operations
    protocol: TCP
    targetPort: 9443
    port: 9443

{{- if eq $.Values.proxy.provider "haproxy" }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ $.Values.server.name }}
  namespace:  {{ $.Values.metadata.namespace }}
  annotations:
    kubernetes.io/ingress.class: "haproxy"
    ingress.kubernetes.io/ssl-passthrough: "true"
spec:
  rules:
  - host: ca.{{ $.Values.metadata.namespace }}.{{ $.Values.proxy.external_url_suffix }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: {{ $.Values.server.name }}
            port:
              number: {{ $.Values.service.ports.tcp.clusteripport }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ $.Values.server.name }}-ops
  namespace:  {{ $.Values.metadata.namespace }}
  annotations:
    kubernetes.io/ingress.class: "haproxy"    
spec:
  rules:
  - host: ca-ops.{{ $.Values.metadata.namespace }}.{{ $.Values.proxy.external_url_suffix }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: {{ $.Values.server.name }}
            port:
              number: 9443
{{- end }}
