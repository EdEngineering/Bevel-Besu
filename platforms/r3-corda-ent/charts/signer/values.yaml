##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

# Default values for Signer service.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

#############################################################
#                   Basic Configuration                     #
#############################################################
# Provide the name of the node
# Eg. nodeName: signer
nodeName:

# This section contains the Corda Enterprise Signer metadata.
metadata:
  # Provide the namespace for the Corda Enterprise Signer.
  # Eg. namespace: cenm
  namespace:
  # Provide any additional labels for the Corda Enterprise Signer.
  labels:

# Provide information regarding the Docker images used.
image:
  # Provide the alpine utils image, which is used for all init-containers of deployments/jobs.
  # NOTE: The alpine image used is the base alpine image with CURL installed.
  # Eg. initContainerName: hyperledgerlabs/alpine-utils:1.0
  initContainer:
  # Provide the image for the main Signer container.
  # Eg. idmanContainerName: corda/enterprise-signer:1.2-zulu-openjdk8u242
  signerContainer:
  # Provide the docker-registry secret created and stored in kubernetes cluster as a secret.
  # Eg. imagePullSecrets: regcred, can add multiple creds
  imagePullSecrets: 
    - name:  
  # Pull policy to be used for the Docker image
  # Eg. pullPolicy: Always
  pullPolicy:

# Required parameter to start any .jar files
# e.g. acceptLicense: YES 
acceptLicense: YES

#############################################################
#               HashiCorp Vault Configuration               #
#############################################################
# NOTE: Make sure that the vault is already unsealed, intialized and configured to 
# use Kubernetes service account token based authentication. 
# For more info, see https://www.vaultproject.io/docs/auth/kubernetes

vault:
  # Provide the vault address
  # Eg. address: http://vault.example.com:8200
  address:
  # Provide the vault role used.
  # Eg. role: vault-role
  role:
  # Provide the authpath configured to be used.
  # Eg. authpath: entcordacenm
  authPath:
  # Provide the service account name autheticated to vault.
  # NOTE: Make sure that the service account is already created and autheticated to use the vault.
  # Eg. serviceAccountName: vault-auth
  serviceAccountName:
  # Provide the vault path where the  certificates are stored
  # Eg. certsecretprefix: secret/cenm-org-name/signer/certs
  certSecretPrefix:
  # The amount of times to retry fetching from/writing to Vault before giving up.
  # Eg. retries: 10
  retries:
  # The amount of time in seconds to wait after an error occurs when fetching from/writing to Vault.
  # Eg. sleepTimeAfterError: 15  
  sleepTimeAfterError:


#############################################################
#                  Signer Configuration                     #
#############################################################

# Provide the service details for setting up ssh
service:
  # Eg. type: ClusterIP
  type:
  adminListener:
    port: 6000
#############################################################
#                       CENM SERVICES DETAILS               #
#############################################################
cenmServices:
  # Auth service name
  authName: 
  # Auth service port
  authPort:
  # Provide the name of the idman
  # Eg. idmanName: idman
  idmanName:
# provide the other cenm services details
serviceLocations:
 # Provide the idman service address
  identityManager:
    # The internal hostname for the Idman service, inside the K8s cluster
    # Eg. host: idman.namespace
    host:
    # The public IP of the Idman service, accessible outside of the K8s cluster
    # Eg. publicIp: idman.external-url-suffix.com
    publicIp:
    # Port at which idman service is accessible, inside the K8s cluster
    # Eg. port: 5052
    port:
    # Public port at which the Idman service is accessible outside the K8s cluster
    # Eg. publicPort: 443
    publicPort:
  # networkmap service details
  networkMap:
    # Ex host: networkmap.namespace
    host:
    # port: 5050
    port:
  # Details of service where certificate revocation list will be published by idman
  revocation:
    # port: 5053
    port:
  

# Provide signers variables that will go to the template file
# Like the time interval for checking different tasks
signers:
  # For checking Certificate Signing Request (CSR) schedule
  CSR:
    schedule:
      # Eg. interval: 1m
      interval:
  # For checking Certificate Revocation List (CRL) schedule
  CRL:
    schedule:
      # Eg. interval: 1d
      interval:
  # For checking with NetworkMap (NMS)
  NetworkMap:
    schedule:
      # Eg. interval: 1d
      interval:
  # For checking network parameters interval
  NetworkParameters:
    schedule:
      # Eg. interval: 1m
      interval:


#############################################################
#                       Settings                            #
#############################################################
# Provide volume related specifications
config:
  volume:
  # Eg. baseDir: /opt/corda
    baseDir:

  # Provide the path where the CENM Signer .jar-file is stored
  # Eg. jarPath: bin
  jarPath:

  # Provide the path where the CENM Service configuration files are stored
  # Eg. configPath: etc
  configPath:

  # Provide any extra annotations for the deployment
  deployment:
    #   annotations:
    #     key: "value"
    annotations: {}

  # Provide configuration of the .jar files used in the Node
  cordaJar:
    # Provide the memory size.
    # Eg. memorySize: 4096 (if using kilobytes)
    # Eg. memorySize: 512 (if using megabytes)
    # Eg. memorySize: 1 (if using gigabytes) 
    memorySize:
    # Provide the unit of greatness for the size, one of three options:
    # - k or K for kilobytes
    # - m or M for megabytes
    # - g or G for gigabytes
    # Eg. unit: M
    unit:
  
  # Set memory limits of pod  
  pod:  
    resources:
      # Provide the limit memory for node
      # Eg. limits: 512M
      limits:
      # Provide the requests memory for node
      # Eg. requests: 550M
      requests:

  # Provide the number of replicas for your pods
  # Eg. replicas: 1
  replicas:

healthCheck:
  # Health Check node port set to get rid of logs pollution
  # Eg. nodePort: 0
  nodePort: 
