##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

#############################################################################################
# This role deletes the Vault configurations
#############################################################################################

#############################################################################################
# This task deletes the Docker credentials
- name: Delete docker creds
  k8s:
    kind: Secret
    namespace: "{{ org.name | lower }}-ent"
    name: "regcred"
    state: absent
    kubeconfig: "{{ org.k8s.config_file }}"
    context: "{{ org.k8s.context }}"
  ignore_errors: yes

############################################################################################
# Delete the Ambassador Creds for idman
- name: Delete Ambassador creds for idman
  k8s:
    kind: Secret
    namespace: "{{ org.name | lower }}-ent"
    name: "{{ org.services.idman.name }}-ambassador-certs"
    kubeconfig: "{{ org.k8s.config_file }}"
    context: "{{ org.k8s.context }}"
    state: absent
  ignore_errors: yes
  when: org.type == 'cenm'

# Delete the Ambassador Creds for networkmap
- name: Delete Ambassador creds for networkmap
  k8s:
    kind: Secret
    namespace: "{{ org.name | lower }}-ent"
    name: "{{ org.services.networkmap.name }}-ambassador-certs"
    kubeconfig: "{{ org.k8s.config_file }}"
    context: "{{ org.k8s.context }}"
    state: absent
  ignore_errors: yes
  when: org.type == 'cenm'

# Delete the Ambassador Creds for notary
- name: Delete Ambassador creds for notary
  k8s:
    kind: Secret
    namespace: "{{ org.name | lower }}-ent"
    name: "{{ notary.name }}-ambassador-certs"
    kubeconfig: "{{ org.k8s.config_file }}"
    context: "{{ org.k8s.context }}"
    state: absent
  loop: "{{ org.services.notaries }}"
  loop_control:
    loop_var: notary
  ignore_errors: yes
  when: org.type == 'cenm' or org.type == 'notary'

# Delete the Ambassador Creds for each peer of all nodes
- name: Delete Ambassador creds for each peer of all nodes
  k8s:
    kind: Secret
    namespace: "{{ org.name | lower }}-ent"
    name: "{{ peer.name }}-ambassador-certs"
    kubeconfig: "{{ org.k8s.config_file }}"
    context: "{{ org.k8s.context }}"
    state: absent
  loop: "{{ org.services.peers }}"
  loop_control:
    loop_var: peer
  ignore_errors: yes
  when: org.type == 'node'

############################################################################################
# This task deletes vault auth for organizations
- name: Delete vault-auth path for organizations
  shell: |
    vault kv delete sys/auth/cordaent{{ org.name | lower }}
  environment:
    VAULT_ADDR: "{{ org.vault.url }}"
    VAULT_TOKEN: "{{ org.vault.root_token }}"

# This task deletes vault auth for float
- name: Delete vault-auth path for organizations float vault
  shell: |    
    vault kv delete sys/auth/cordaent{{ org.name | lower }}float
    vault kv delete sys/auth/cordaentfloat{{ org.name | lower }}
  environment:
    VAULT_ADDR: "{{ org.services.float.vault.url }}"
    VAULT_TOKEN: "{{ org.services.float.vault.root_token }}"
  when: org.type == 'node' and org.firewall.enabled

############################################################################################
# This task deletes crypto materials from vault for cenm
- name: Delete Crypto for CENM
  shell: |
    vault secrets disable {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}
  environment:
    VAULT_ADDR: "{{ org.vault.url }}"
    VAULT_TOKEN: "{{ org.vault.root_token }}"

# This task deletes crypto material
- name: Delete Crypto material for CENM
  shell: |
    vault kv delete {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/root/certs
    vault kv delete {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/{{ org.services.idman.name }}/certs
    vault kv delete {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/{{ org.services.idman.name }}/crls
    vault kv delete {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/{{ org.services.idman.name }}/tlscerts
    vault kv delete {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/{{ org.services.networkmap.name }}/certs
    vault kv delete {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/{{ org.services.networkmap.name }}/tlscerts
    vault kv delete {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/{{ org.services.signer.name }}/certs
    vault kv delete {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/credentials/keystore
    vault kv delete {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/credentials/truststore
    vault kv delete {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/credentials/ssl
    vault kv delete {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/credentials/cordapps
  environment:
    VAULT_ADDR: "{{ org.vault.url }}"
    VAULT_TOKEN: "{{ org.vault.root_token }}"
  when: org.type == 'cenm'

# This task deletes crypto material
- name: Delete Crypto material for CENM Notaries
  shell: |
    vault kv delete {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/{{ notary.name }}/tlscerts
    vault kv delete {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/{{ notary.name }}/certs/nodekeystore
    vault kv delete {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/{{ notary.name }}/certs/sslkeystore
    vault kv delete {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/{{ notary.name }}/certs/truststore
    vault kv delete {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/{{ notary.name }}/nodeInfo    
  environment:
    VAULT_ADDR: "{{ org.vault.url }}"
    VAULT_TOKEN: "{{ org.vault.root_token }}"
  loop: "{{ org.services.notaries }}"
  loop_control:
    loop_var: notary
  when: org.type == 'cenm'

# This task deletes crypto material for additional notaries
- name: Delete Crypto material for Notary orgs
  shell: |
    vault kv delete {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/root/certs
    vault kv delete {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/tlscerts
    vault kv delete {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/{{ notary.name }}/tlscerts
    vault kv delete {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/{{ notary.name }}/certs/nodekeystore
    vault kv delete {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/{{ notary.name }}/certs/sslkeystore
    vault kv delete {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/{{ notary.name }}/certs/truststore
    vault kv delete {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/{{ notary.name }}/nodeInfo    
    vault kv delete {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/credentials/keystore
    vault kv delete {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/credentials/truststore
    vault kv delete {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/credentials/cordapps
  environment:
    VAULT_ADDR: "{{ org.vault.url }}"
    VAULT_TOKEN: "{{ org.vault.root_token }}"
  loop: "{{ org.services.notaries }}"
  loop_control:
    loop_var: notary
  when: org.type == 'notary'
  ignore_errors: yes

############################################################################################
# This task deletes crypto material
- name: Delete Crypto material for nodes
  shell: |
    vault kv delete {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/{{ peer.name | lower }}/certs/customnodekeystore
    vault kv delete {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/{{ peer.name | lower }}/certs/{{ network | json_query('network_services[?type==`idman`].name') | first }}
    vault kv delete {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/{{ peer.name | lower }}/certs/{{ network | json_query('network_services[?type==`networkmap`].name') | first }}
    vault kv delete {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/{{ peer.name | lower }}/certs/networkmaptruststore
    vault kv delete {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/{{ peer.name | lower }}/certs/nodekeystore
    vault kv delete {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/{{ peer.name | lower }}/certs/sslkeystore
    vault kv delete {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/{{ peer.name | lower }}/certs/truststore
    vault kv delete {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/{{ peer.name | lower }}/certs/firewall
    vault kv delete {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/{{ peer.name | lower }}/tlscerts
    vault kv delete {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/{{ peer.name | lower }}/certs
    vault kv delete {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/{{ peer.name | lower }}/root/certs
    vault kv delete {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/{{ peer.name | lower }}/network-parameters
    vault kv delete {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/{{ peer.name | lower }}/credentials
  environment:
    VAULT_ADDR: "{{ org.vault.url }}"
    VAULT_TOKEN: "{{ org.vault.root_token }}"
  loop: "{{ org.services.peers }}"
  loop_control:
    loop_var: peer
  when: org.type == 'node'

# This task deletes crypto material from float vault path
- name: Delete Crypto material for nodes
  shell: |
    vault kv delete {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/{{ peer.name | lower }}/certs/nodekeystore
    vault kv delete {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/{{ peer.name | lower }}/certs/sslkeystore
    vault kv delete {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/{{ peer.name | lower }}/certs/truststore
    vault kv delete {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/{{ peer.name | lower }}/certs/firewall
    vault kv delete {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/{{ peer.name | lower }}/tlscerts
    vault kv delete {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/{{ peer.name | lower }}/certs
    vault kv delete {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/{{ peer.name | lower }}/credentials
  environment:
    VAULT_ADDR: "{{ org.services.float.vault.url }}"
    VAULT_TOKEN: "{{ org.services.float.vault.root_token }}"
  loop: "{{ org.services.peers }}"
  loop_control:
    loop_var: peer
  when: org.type == 'node' and org.firewall.enabled
############################################################################################
# This task deletes crypto materials from vault for nodes
- name: Delete Crypto for nodes
  shell: |
    vault secrets disable {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}
  environment:
    VAULT_ADDR: "{{ org.vault.url }}"
    VAULT_TOKEN: "{{ org.vault.root_token }}"
  when: org.type == 'node'

# This task deletes crypto materials from float vault
- name: Delete Crypto for float vault
  shell: |
    vault secrets disable {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}
  environment:
    VAULT_ADDR: "{{ org.services.float.vault.url }}"
    VAULT_TOKEN: "{{ org.services.float.vault.root_token }}"
  when: org.type == 'node' and org.firewall.enabled

############################################################################################
# This task deletes the policies
- name: Delete vault access control policy for organizations
  shell: |
    vault policy delete vault-crypto-{{ org.type }}-{{ org.name | lower }}-ro
  environment:
    VAULT_ADDR: "{{ org.vault.url }}"
    VAULT_TOKEN: "{{ org.vault.root_token }}"

# This task deletes the float vault policies
- name: Delete vault access control policy for organizations float
  shell: |
    vault policy delete vault-crypto-{{ org.type }}-{{ org.name | lower }}-ro
  environment:
    VAULT_ADDR: "{{ org.services.float.vault.url }}"
    VAULT_TOKEN: "{{ org.services.float.vault.root_token }}"
  when: org.type == 'node' and org.firewall.enabled
