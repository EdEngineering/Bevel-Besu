##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

# This role creates enviorment for float cluster

- name: Setup flux for float cluster
  include_role:
    name: "{{ playbook_dir }}/../../shared/configuration/roles/setup/flux"
  vars:
    item: "{{ org.services.float }}"
    kubeconfig_path: "{{ item.k8s.config_file }}"
    kubecontext: "{{ item.k8s.context }}"
    git_username: "{{ item.gitops.username }}"
    git_password: "{{ item.gitops.password }}"
    git_repo: "{{ item.gitops.git_repo }}"
    git_branch: "{{ item.gitops.branch }}"
    git_path: "{{ item.gitops.release_dir }}"
    git_host: "{{ item.gitops.git_repo.split('/')[0] | lower }}" # extract the hostname from the git_repo
    ssh: "{{ item.gitops.ssh | default(false) }}"
    helm_operator_version: "1.2.0"
    aws_authenticator:
      os: "{{ install_os }}"
      arch: "{{ install_arch }}"
      bin_directory: "{{ bin_install_dir }}"
      checksum: ""

- name: Setup ambassador for float cluster
  include_role:
    name: "{{ playbook_dir }}/../../shared/configuration/roles/setup/ambassador"
  vars:
    item: "{{ org.services.float }}"
    kubeconfig_path: "{{ item.k8s.config_file }}"
    kubecontext: "{{ item.k8s.context }}"
    aws: "{{ item.aws }}"
    ambassador:
      item: "{{ org.services.float }}"
  
# Create Storageclass that will be used for this deployment
- name: Create Storage Class
  include_role:
    name: create/storageclass
  vars:
    storageclass_name: "cordaentsc"
    kubernetes: "{{ org.services.float.k8s }}"
    gitops: "{{ org.services.float.gitops }}"

# create namespace, service account and clusterrolebinding
- name: "Create namespace, service accounts and clusterrolebinding"
  include_role: 
    name: create/namespace_serviceaccount
  vars:
    component_ns: "{{ org.name | lower }}-ent"
    organisation: "{{ org.name | lower }}"
    kubernetes: "{{ org.services.float.k8s }}"
    gitops: "{{ org.services.float.gitops }}"
# And wait for the enviorment creation
- name: "Wait for namespace creation for {{ organisation }}"
  include_role:
    name: "{{ playbook_dir }}/../../shared/configuration/roles/check/k8_component"
  vars:
    component_type: "Namespace"
    component_name: "{{ component_ns }}"
    kubernetes: "{{ org.services.float.k8s }}"
    type: "retry"

- name: "Wait for vault-auth creation for {{ organisation }}"
  include_role:
    name: "{{ playbook_dir }}/../../shared/configuration/roles/check/k8_component"
  vars:
    component_type: "ServiceAccount"
    component_name: "vault-auth"
    kubernetes: "{{ org.services.float.k8s }}"
    type: "retry"
  tags:
    - notest    

- name: "Wait for vault-reviewer creation for {{ organisation }}"
  include_role:
    name: "{{ playbook_dir }}/../../shared/configuration/roles/check/k8_component"
  vars:
    component_type: "ServiceAccount"
    component_name: "vault-reviewer"
    kubernetes: "{{ org.services.float.k8s }}"
    type: "retry"
  tags:
    - notest    

- name: "Wait for ClusterRoleBinding creation for {{ organisation }}"
  include_role:
    name: "{{ playbook_dir }}/../../shared/configuration/roles/check/k8_component"
  vars:
    component_type: "ClusterRoleBinding"
    component_name: "{{ component_ns }}-role-tokenreview-binding"
    kubernetes: "{{ org.services.float.k8s }}"
    type: "retry"
  tags:
    - notest
