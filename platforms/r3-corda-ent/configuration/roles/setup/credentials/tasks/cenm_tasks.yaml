##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

# This role fetches the credentials from the network.yaml and pushes them to the vault of corresponding organizations

# Check if the keystore credentials are already present in the vault
- name: Check if the keystore credentials are already present in the vault
  shell: |
    vault kv get -field=idman {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/credentials/keystore
  environment:
    VAULT_ADDR: "{{ org.vault.url }}"
    VAULT_TOKEN: "{{ org.vault.root_token }}"
  register: vault_credentials_keystore
  ignore_errors: yes

# Write the keystore credentials to the vault
- name: Write the keystore credentials to the vault if they dont exist
  shell: |
    vault kv put {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/credentials/keystore idman={{ org.credentials.keystore.idman }} networkmap={{ org.credentials.keystore.networkmap }} subordinateca={{ org.credentials.keystore.subordinateca }} rootca={{ org.credentials.keystore.rootca }} tlscrlsigner={{ org.credentials.keystore.tlscrlsigner }} keyStorePassword={{ org.credentials.keystore.keystore }}
  environment:
    VAULT_ADDR: "{{ org.vault.url }}"
    VAULT_TOKEN: "{{ org.vault.root_token }}"
  when: vault_credentials_keystore.failed == True

# Check if the truststore credentials are already present in the vault
- name: Check if the truststore credentials are already present in the vault
  shell: |
    vault kv get -field=rootca {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/credentials/truststore
  environment:
    VAULT_ADDR: "{{ org.vault.url }}"
    VAULT_TOKEN: "{{ org.vault.root_token }}"
  register: vault_credentials_truststore
  ignore_errors: yes

# Write the truststore credentials to the vault
- name: Write the truststore credentials to the vault if they dont exist
  shell: |
    vault kv put {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/credentials/truststore rootca={{ org.credentials.truststore.rootca }} ssl={{ org.credentials.truststore.ssl }} trustStorePassword={{ org.credentials.truststore.truststore }}
  environment:
    VAULT_ADDR: "{{ org.vault.url }}"
    VAULT_TOKEN: "{{ org.vault.root_token }}"
  when: vault_credentials_truststore.failed == True

# Check if the ssl credentials are already present in the vault
- name: Check if the ssl credentials are already present in the vault
  shell: |
    vault kv get -field=signer {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/credentials/ssl
  environment:
    VAULT_ADDR: "{{ org.vault.url }}"
    VAULT_TOKEN: "{{ org.vault.root_token }}"
  register: vault_credentials_ssl
  ignore_errors: yes

# Write the ssl credentials to the vault
- name: Write the ssl credentials to the vault if they dont exist
  shell: |
    vault kv put {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/credentials/ssl idman={{ org.credentials.ssl.idman }} networkmap={{ org.credentials.ssl.networkmap }} signer={{ org.credentials.ssl.signer }} root={{ org.credentials.ssl.root }} auth={{ org.credentials.ssl.auth }}
  environment:
    VAULT_ADDR: "{{ org.vault.url }}"
    VAULT_TOKEN: "{{ org.vault.root_token }}"
  when: vault_credentials_ssl.failed == True

# Check if the initial user credentials are already present in the vault
- name: Check if the initial user credentials are already present in the vault
  shell: |
    vault kv get -field=user {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/credentials/user
  environment:
    VAULT_ADDR: "{{ org.vault.url }}"
    VAULT_TOKEN: "{{ org.vault.root_token }}"
  register: vault_credentials_user
  ignore_errors: yes

# Write the initial user credentials to the vault
- name: Write the initial user credentials to the vault if they dont exist
  shell: |
    vault kv put {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/credentials/user username={{ org.services.auth.username }} userpwd={{ org.services.auth.userpwd }}
  environment:
    VAULT_ADDR: "{{ org.vault.url }}"
    VAULT_TOKEN: "{{ org.vault.root_token }}"
  when: vault_credentials_user.failed == True

- name: "Write cordapps credentials to vault"
  shell: |
    vault kv put {{ vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/credentials/cordapps repo_username="{{ org.cordapps.username }}" repo_password="{{ org.cordapps.password }}"
  environment:
    VAULT_ADDR: "{{ vault.url }}"
    VAULT_TOKEN: "{{ vault.root_token }}"
  when: 
    - org.cordapps is defined
    - org.cordapps.password is defined
