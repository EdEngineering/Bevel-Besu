##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

# Check if the truststore credentials are already present in the vault
- name: Check if the truststore credentials are already present in the vault
  shell: |
    vault kv get -field=rootca {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/credentials/truststore
  environment:
    VAULT_ADDR: "{{ org.vault.url }}"
    VAULT_TOKEN: "{{ org.vault.root_token }}"
  register: vault_credentials_truststore
  ignore_errors: yes

# Write the truststore credentials to the vault
- name: Write the truststore credentials to the vault if they dont exist
  shell: |
    vault kv put {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/credentials/truststore rootca={{ network | json_query('network_services[?type==`networkmap`].truststore_pass') | first }} trustStorePassword={{ peer.credentials.truststore }}
  environment:
    VAULT_ADDR: "{{ org.vault.url }}"
    VAULT_TOKEN: "{{ org.vault.root_token }}"
  when: vault_credentials_truststore.failed == True

# Check if the keystore credentials are already present in the vault
- name: Check if the keystore credentials are already present in the vault
  shell: |
    vault kv get -field=networkmap {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/credentials/keystore
  environment:
    VAULT_ADDR: "{{ org.vault.url }}"
    VAULT_TOKEN: "{{ org.vault.root_token }}"
  register: vault_credentials_keystore
  ignore_errors: yes

# Write the keystore credentials to the vault
- name: Write the keystore credentials to the vault if they dont exist
  shell: |
    vault kv put {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/credentials/keystore keyStorePassword={{ peer.credentials.keystore }}
  environment:
    VAULT_ADDR: "{{ org.vault.url }}"
    VAULT_TOKEN: "{{ org.vault.root_token }}"
  when: vault_credentials_keystore.failed == True

# Check if the node credentials are present in the vault
- name: Check if the cordapps credentials are already present in the vault
  shell: |
    vault kv get -field=repo_username {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/credentials/cordapps
  environment:
    VAULT_ADDR: "{{ org.vault.url }}"
    VAULT_TOKEN: "{{ org.vault.root_token }}"
  register: vault_credentials_node
  ignore_errors: yes

- name: "Write cordapps credentials to vault"
  shell: |
    vault kv put {{ org.vault.secret_path | default('secretsv2') }}/{{ org.name | lower }}/credentials/cordapps repo_username="{{ org.cordapps.username }}" repo_password="{{ org.cordapps.password }}"
  environment:
    VAULT_ADDR: "{{ org.vault.url }}"
    VAULT_TOKEN: "{{ org.vault.root_token }}"
  when: 
    - vault_credentials_node.failed == True
    - org.cordapps is defined
    - org.cordapps.password is defined
