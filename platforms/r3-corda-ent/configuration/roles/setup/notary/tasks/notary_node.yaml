##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

##############################################################################################
# This role sets up all Additional Notary orgs
##############################################################################################

- name: "Wait for namespace creation for {{ organisation }}"
  include_role:
    name: "{{ playbook_dir }}/../../shared/configuration/roles/check/k8_component"
  vars:
    component_type: "Namespace"
    component_name: "{{ component_ns }}"
    type: "retry"

- name: "Wait for vault-auth creation for {{ organisation }}"
  include_role:
    name: "{{ playbook_dir }}/../../shared/configuration/roles/check/k8_component"
  vars:
    component_type: "ServiceAccount"
    component_name: "vault-auth"
    type: "retry"
  tags:
    - notest    

- name: "Wait for vault-reviewer creation for {{ organisation }}"
  include_role:
    name: "{{ playbook_dir }}/../../shared/configuration/roles/check/k8_component"
  vars:
    component_type: "ServiceAccount"
    component_name: "vault-reviewer"
    type: "retry"
  tags:
    - notest    

- name: "Wait for ClusterRoleBinding creation for {{ organisation }}"
  include_role:
    name: "{{ playbook_dir }}/../../shared/configuration/roles/check/k8_component"
  vars:
    component_type: "ClusterRoleBinding"
    component_name: "{{ component_ns }}-role-tokenreview-binding"
    type: "retry"
  tags:
    - notest

# ----------------------------------------------------------------------  
# create vault access policies
- name: "Setup vault access for nodes"
  include_role: 
    name: setup/vault_kubernetes
  vars:
    component_name: "{{ org.name | lower }}"
    component_path: "{{ org.name | lower }}/"
    component_auth: "cordaent{{ org.name | lower }}"
    component_type: "{{ org.type | lower }}"

# Create ambassador certificates for notary
- name: Create ambassador certificates for notary
  include_role:
    name: create/certificates/notary
  vars:
    tlscert_path: "./build/ambassador/{{ notary.name }}"
    node_name: "{{ notary.name | lower }}"
    service_name: "{{ notary.name }}"
    dest_path: "./build/ambassador/{{ notary.name }}/notary.crt"
  loop: "{{ org.services.notaries }}"
  loop_control:
    loop_var: notary

# Save tls certificates for network_services to Vault
- name: Save tls certificates for network_services to Vault
  include_role:
    name: setup/tlscerts
  loop: "{{ network.network_services }}"
  loop_control:
    loop_var: services

# Write the networkroot truststore, node truststore, node keystore, firewallca, float and bridge passwords to the vault
- name: Write the networkroot truststore, node truststore, node keystore, firewallca, float and bridge passwords to the vault
  include_role:
    name: setup/credentials

# ----------------------------------------------------------------------   
# Create value file for notary-initial-registration 
- name: Create value file for notary registration job
  include_role:
    name: setup/notary-initial-registration
  loop: "{{ org.services.notaries }}"
  loop_control:
    loop_var: notary

# Create deployment file for CENM notary service
- name: Create value file for notary
  include_role: 
    name: helm_component
  vars:
    type: "notary"
    notary_service: "{{ notary }}"
    component_name: "{{ notary_service.name | lower }}"
    name: "{{ org.name | lower }}"
    values_dir: "{{ playbook_dir }}/../../../{{ org.gitops.release_dir }}"
    charts_dir: "{{ org.gitops.chart_source }}"
    idman_url: "{{ network | json_query('network_services[?type==`idman`].uri') | first }}"
    idman_domain: "{{ idman_url.split(':')[1] | regex_replace('/', '') }}"    
    networkmap_url: "{{ network | json_query('network_services[?type==`networkmap`].uri') | first }}"
    networkmap_domain: "{{ networkmap_url.split(':')[1] | regex_replace('/', '') }}"
    corda_service_version: "notary-{{ network.version }}"
  loop: "{{ org.services.notaries }}"
  loop_control:
    loop_var: notary

# Push the notary deployment files to repository
- name: Push the created deployment files to repository
  include_role: 
    name: "{{ playbook_dir }}/../../shared/configuration/roles/git_push"
  vars:
    GIT_DIR: "{{ playbook_dir }}/../../../"
    gitops: "{{ org.gitops }}"
    GIT_RESET_PATH: "platforms/r3-corda-ent/configuration"
    msg: "[ci skip] Pushing deployment files for notary service"
