##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

---
##############################################################################################
# This role creates the value file for notary
##############################################################################################

# Wait till the nmap is running
- name: Waiting for nmap pod to come up
  include_role:
    name: "{{ playbook_dir }}/../../shared/configuration/roles/check/helm_component"
  vars:
    component_type: "Pod"
    namespace: "{{ component_ns }}"
    component_name: "{{ org.services.networkmap.name | lower }}"
    kubernetes: "{{ org.k8s }}"
    label_selectors:
      - app = {{ component_name }}

# Create notary ambassador certificates
- name: Create ambassador certficates for notary
  include_role:
    name: create/certificates/cenm
  vars:
    tlscert_path: "./build/ambassador/{{ notary.name }}"
    service_name: "{{ notary.name }}"
    namespace: "{{ component_ns }}"
    dest_path: "./build/ambassador/{{ notary.name }}/notary.crt"
  loop: "{{ org.services.notaries }}"
  loop_control:
    loop_var: notary

# Create deployment file for CENM notary service
- name: Create value file for notary
  include_role: 
    name: helm_component
  vars:
    type: "notary"
    notary_service: "{{ notary }}"
    component_name: "{{ notary_service.name | lower }}"
    name: "{{ org.name | lower }}"
    values_dir: "{{ playbook_dir }}/../../../{{ org.gitops.release_dir }}"
    charts_dir: "{{ org.gitops.chart_source }}"
    idman_url: "{{ network | json_query('network_services[?type==`idman`].uri') | first }}"
    idman_domain: "{{ idman_url.split(':')[1] | regex_replace('/', '') }}"    
    networkmap_url: "{{ network | json_query('network_services[?type==`networkmap`].uri') | first }}"
    networkmap_domain: "{{ networkmap_url.split(':')[1] | regex_replace('/', '') }}"
    corda_service_version: notary-{{ network.version }}
  loop: "{{ org.services.notaries }}"
  loop_control:
    loop_var: notary

# Push the notary deployment files to repository
- name: Push the created deployment files to repository
  include_role: 
    name: "{{ playbook_dir }}/../../shared/configuration/roles/git_push"
  vars:
    GIT_DIR: "{{ playbook_dir }}/../../../"
    gitops: "{{ org.gitops }}"
    GIT_RESET_PATH: "platforms/r3-corda-ent/configuration"
    msg: "[ci skip] Pushing deployment files for notary service"
